{"version":3,"sources":["components/shared/ToolTipIconButton/ToolTipIconButton.tsx","context/ThemeContext.tsx","assets/portfolio-info.ts","utils/helpers.ts","components/NavBar/NavBar.tsx","components/Header/Header.tsx","components/shared/SkillTag/SkillTag.tsx","components/shared/ImageAvatar/ImageAvatar.tsx","context/GithubProfileContext.tsx","components/shared/ErrorMessage/ErrorMessage.tsx","components/shared/LoadingProgress/LoadingProgress.tsx","utils/constants/error-messages.ts","components/GithubVCard/GithubVCard.tsx","components/PersonalInfoCard/PersonalInfoCard.tsx","components/shared/ShowMoreAccordion/ShowMoreAccordion.tsx","components/About/About.tsx","components/Profile/Profile.tsx","components/shared/EmojiList/EmojiList.tsx","components/shared/InfoCard/InfoCard.tsx","components/EducationInfo/EducationInfo.tsx","components/WorkExperience/WorkExperience.tsx","components/EducationAndWork/EducationAndWork.tsx","components/shared/RepoCard/RepoCardSummary.tsx","components/shared/RepoCard/RepoCard.tsx","components/PinnedRepos/PinnedRepos.tsx","components/RecentActivites/RecentActivities.tsx","components/shared/SocialMediaLinksList/SocialMediaLinksList.tsx","components/shared/ScrollTop/ScrollTop.tsx","components/Footer/Footer.tsx","utils/constants/colors-codes.ts","utils/constants/theme-modes.ts","pages/Home.tsx","App.tsx","index.tsx"],"names":["ToolTipIconButton","props","children","tooltipTitle","onClick","Tooltip","title","IconButton","defaultThemeValue","themeMode","toggleThemeMode","ThemeContext","React","createContext","bioData","skillTags","id","name","backgroundColor","fontColor","socialMediaLinks","workExperiences","role","companyName","companyLogo","process","duration","description","descriptionBullets","educationInfo","collegeName","collegeLogo","getRepoTopicsArr","repositoryTopicsNodes","topicsWithColors","forEach","topic","index","topicName","push","openInNewTab","url","window","open","NavBar","useContext","mailToLink","telephoneLink","className","AppBar","position","Toolbar","Grid","container","spacing","item","xs","sm","classes","root","Typography","variant","e","preventDefault","Header","useStyles","makeStyles","color","margin","fontSize","SkillTag","size","Chip","label","large","width","height","ImageAvatar","alt","src","Avatar","providerDefaultValue","isLoading","error","user","GithubProfileContext","ErrorMessage","oneLiner","LoadingProgress","source","CircularProgress","errorMsgs","PINNED_REPOS_ERROR_MSG","RECENT_REPOS_ERROR_MSG","PERSONAL_INFO_CARD_ERROR_MSG","GithubVCard","status","country","location","company","emojiHTML","message","emojiHTMLStr","List","component","ListItem","ListItemIcon","dangerouslySetInnerHTML","__html","ListItemText","primary","emoji","Boolean","PersonalInfoCard","meetingSchedulerLink","resumeDownloadLink","avatarUrl","Card","CardContent","map","skillTag","align","CardActions","Button","startIcon","ShowMoreAccordion","summary","Accordion","AccordionSummary","expandIcon","AccordionDetails","About","aboutMe","recentChallengeSolved","bioTagLine","linkedIn","skype","bio","Paper","uuidv1","aboutMePara","gutterBottom","Profile","md","EmojiList","dataArr","dataItem","InfoCard","subtitle","metaData","imageURL","body1","CardMedia","image","EducationInfo","educationInfoData","educationItem","WorkExperience","workExperiencesData","workExperienceDataItem","EducationAndWork","RepoCardSummary","repoSummary","primaryLanguageColor","primaryLanguageName","forkCount","stars","diskUsage","latestCommitObj","target","totalCount","history","messageHeadline","pushedDate","style","background","moment","Date","fromNow","RepoCard","repoDetails","repositoryTopics","nodes","homepageUrl","primaryLanguage","pushedAt","repoDetailRef","refs","stargazers","PinnedRepos","panel","pinnedItems","edges","useState","expanded","setExpanded","onChange","event","newExpanded","edge","lg","node","RecentActivities","repositories","repository","theme","IconButtons","github","twitter","facebook","instagram","bottom","right","ScrollTop","elementId","trigger","useScrollTrigger","Zoom","in","anchor","document","querySelector","scrollIntoView","behavior","block","Footer","SocialMediaLinksList","Fab","PALETTE_PRIMARY","HOME_CONTAINER","light","dark","THEME_MODES","display","borderRadius","flexDirection","alignSelf","palette","type","Home","gitHubProfileData","setGithubProfileData","getGithubProfileData","prevGithubProfileData","axios","get","result","data","errors","console","log","useEffect","elevation","Provider","value","App","existingMode","localStorage","getItem","setThemeMode","createMuiTheme","main","ThemeProvider","prevMode","newMode","setItem","ReactDOM","render","getElementById"],"mappings":";4wBAyBeA,EATkD,SAACC,GAChE,IAAQC,EAAyCD,EAAzCC,SAAS,EAAgCD,EAA/BE,oBAAY,MAAG,GAAE,EAAEC,EAAYH,EAAZG,QACrC,OACE,cAACC,EAAA,EAAO,CAACC,MAAOH,EAAa,SAC3B,cAACI,EAAA,EAAU,CAACH,QAASA,EAAQ,SAAEF,KAGrC,ECXMM,EAAmC,CACvCC,UAAW,QACXC,gBAAiB,WAAO,GAMbC,EAA6CC,IAAMC,cAC9DL,GCZIM,EACK,CACP,4UACA,6FAHEA,EAMF,8mCANEA,EAQF,2GAREA,EAUF,qFAVEA,EAWkB,sCAIlBC,EAAuB,CAC3B,CAAEC,GAAI,EAAGC,KAAM,aAAcC,gBAAiB,UAAWC,UAAW,QACpE,CAAEH,GAAI,EAAGC,KAAM,OAAQC,gBAAiB,UAAWC,UAAW,QAC9D,CAAEH,GAAI,EAAGC,KAAM,aAAcC,gBAAiB,UAAWC,UAAW,QACpE,CAAEH,GAAI,EAAGC,KAAM,WAAYC,gBAAiB,UAAWC,UAAW,QAClE,CAAEH,GAAI,EAAGC,KAAM,QAASC,gBAAiB,UAAWC,UAAW,QAC/D,CAAEH,GAAI,EAAGC,KAAM,UAAWC,gBAAiB,GAAIC,UAAW,IAC1D,CAAEH,GAAI,EAAGC,KAAM,YAAaC,gBAAiB,UAAWC,UAAW,QACnE,CAAEH,GAAI,EAAGC,KAAM,YAAaC,gBAAiB,GAAIC,UAAW,IAC5D,CAAEH,GAAI,EAAGC,KAAM,UAAWC,gBAAiB,UAAWC,UAAW,QACjE,CAAEH,GAAI,GAAIC,KAAM,UAAWC,gBAAiB,UAAWC,UAAW,QAClE,CAAEH,GAAI,GAAIC,KAAM,UAAWC,gBAAiB,GAAIC,UAAW,IAC3D,CAAEH,GAAI,GAAIC,KAAM,UAAWC,gBAAiB,UAAWC,UAAW,QAClE,CAAEH,GAAI,GAAIC,KAAM,WAAYC,gBAAiB,GAAIC,UAAW,IAC5D,CAAEH,GAAI,GAAIC,KAAM,SAAUC,gBAAiB,UAAWC,UAAW,QACjE,CAAEH,GAAI,GAAIC,KAAM,QAASC,gBAAiB,GAAIC,UAAW,IACzD,CAAEH,GAAI,GAAIC,KAAM,OAAQC,gBAAiB,GAAIC,UAAW,IACxD,CAAEH,GAAI,GAAIC,KAAM,MAAOC,gBAAiB,GAAIC,UAAW,IACvD,CAAEH,GAAI,GAAIC,KAAM,OAAQC,gBAAiB,UAAWC,UAAW,QAC/D,CACEH,GAAI,GACJC,KAAM,kBACNC,gBAAiB,GACjBC,UAAW,IAEb,CACEH,GAAI,GACJC,KAAM,gBACNC,gBAAiB,UACjBC,UAAW,QAEb,CACEH,GAAI,GACJC,KAAM,MACNC,gBAAiB,UACjBC,UAAW,QAEb,CACEH,GAAI,GACJC,KAAM,aACNC,gBAAiB,GACjBC,UAAW,IAEb,CACEH,GAAI,GACJC,KAAM,SACNC,gBAAiB,GACjBC,UAAW,IAEb,CACEH,GAAI,GACJC,KAAM,OACNC,gBAAiB,UACjBC,UAAW,SAKTC,EACI,gCADJA,EAGQ,4BAHRA,EAIW,qBAJXA,EAMM,8CANNA,EAOK,qCAPLA,GAQM,EARNA,GASO,EATPA,EAWG,wBAIHC,EAAmC,CACvC,CACEC,KAAM,kCACNC,YAAa,6BACbC,YAAY,GAAD,OAAKC,GAAsB,uBACtCC,SAAU,wBACVC,YACE,gYACFC,mBAAoB,CAClB,kEACA,4FACA,0EACA,6GACA,ofACA,uhBACA,mUACA,6MACA,+SAGJ,CACEN,KAAM,sCACNC,YAAa,gCACbC,YAAY,GAAD,OAAKC,GAAsB,gCACtCC,SAAU,wBACVC,YACE,sIACFC,mBAAoB,CAClB,gCACA,mDACA,iDACA,qCACA,oDACA,yEACA,yDACA,iEACA,yCACA,uCACA,2DACA,wHACA,gDACA,0FACA,yHACA,iJAGJ,CACEN,KAAM,0BACNC,YAAa,wBACbC,YAAY,GAAD,OAAKC,GAAsB,4BACtCC,SAAU,uBACVC,YACE,qJACFC,mBAAoB,CAClB,+GACA,+HACA,gIACA,qCACA,+EAGJ,CACEN,KAAM,sCACNC,YAAa,YACbC,YAAY,GAAD,OAAKC,GAAsB,yBACtCC,SAAU,uBACVC,YACE,oQACFC,oBAAoB,GAEtB,CACEN,KAAM,sCACNC,YAAa,mBACbC,YAAY,GAAD,OAAKC,GAAsB,4BACtCC,SAAU,gBACVC,YACE,qGACFC,oBAAoB,IAKlBC,EAA+B,CACnC,CACEC,YAAY,4BACZC,YAAY,GAAD,OAAKN,GAAsB,8BACtCC,SAAU,cACVC,YAAa,eACbC,oBAAoB,GAEtB,CACEE,YAAa,0BACbC,YAAY,GAAD,OAAKN,GAAsB,+BACtCC,SAAU,cACVC,YAAa,0CACbC,oBAAoB,GAEtB,CACEE,YAAa,mCACbC,YAAY,GAAD,OAAKN,GAAsB,4BAEtCC,SAAU,cACVC,YAAa,wCACbC,oBAAoB,IC/LXI,EAAmB,SAC9BC,GAEA,IAAMC,EAAmD,GAOzD,OANAD,EAAsBE,SAAQ,SAACC,EAAOC,GAAW,IAAD,IACxCC,EAA8B,QAArB,EAAQ,OAALF,QAAK,IAALA,GAAY,QAAP,EAALA,EAAOA,aAAK,WAAP,EAAL,EAAcnB,YAAI,QAAI,GACpCqB,GACFJ,EAAiBK,KAAK,CAAEtB,KAAMqB,EAAWtB,GAAIqB,GAEjD,IACOH,CACT,EAMaM,EAAe,SAACC,GAC3BC,OAAOC,KAAKF,EAAK,SACnB,ECyEeG,G,OAjFU,WAEvB,MAAuCC,qBAAWlC,GAA1CF,EAAS,EAATA,UAAWC,EAAe,EAAfA,gBAaXoC,EAA8B1B,EAAlB2B,EAAkB3B,EAEtC,OACE,qBAAK4B,UAAU,oBAAmB,SAChC,cAACC,EAAA,EAAM,CAACC,SAAS,SAAQ,SACvB,cAACC,EAAA,EAAO,CAACnC,GAAG,qBAAoB,SAC9B,eAACoC,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACzB,cAACF,EAAA,EAAI,CACHG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,QAAS,CAAEC,KAAM,gCAAiC,SAElD,cAACC,EAAA,EAAU,CACTC,QAAQ,KACRH,QAAS,CAAEC,KAAM,2BAA4B,SAC9C,wBAIH,eAACP,EAAA,EAAI,CACHG,MAAI,EACJC,GAAI,GACJC,GAAI,EACJC,QAAS,CAAEC,KAAM,gCAAiC,UAEjDZ,GACC,qBAAKC,UAAU,mCAAkC,SAC/C,cAAC,EAAiB,CAChB7C,aAAa,UACbC,QAAS,kBAAMoC,EAAaO,EAAc,EAAC,SAE3C,cAAC,IAAS,QAIfD,GACC,qBAAKE,UAAU,mCAAkC,SAC/C,cAAC,EAAiB,CAChB7C,aAAa,WACbC,QAAS,kBAAMoC,EAAaM,EAAW,EAAC,SAExC,cAAC,IAAS,QAIhB,qBAAKE,UAAU,mCAAkC,SAC/C,cAAC,EAAiB,CAChB7C,aAAa,2BACbC,QAxDM,SACpB0D,GAEAA,EAAEC,iBACFrD,GACF,EAmDuC,SAER,SAAdD,EACC,cAAC,IAAe,IAEhB,cAAC,IAAe,mBAUpC,GCtFeuD,GANU,WAAH,OACpB,iCACE,cAAC,EAAM,KACA,E,0FCOLC,GAAYC,YAAW,CAC3BP,KAAM,SAAC1D,GAAuD,cAAM,CAClEkE,MAAuB,QAAlB,EAAO,OAALlE,QAAK,IAALA,OAAK,EAALA,EAAOkB,iBAAS,QAAI,UAC3BD,gBAAsC,QAAvB,EAAEjB,EAAMiB,uBAAe,QAAI,YAC1CkD,OAAQ,mBACRC,SAAU,UACX,IAgBYC,GANqC,SAACrE,GACnD,IAAMyD,EAAUO,GAAUhE,GAC1B,EAAiCA,EAAzBsE,YAAI,MAAG,QAAO,EAAEtD,EAAShB,EAATgB,KACxB,OAAO,cAACuD,GAAA,EAAI,CAACD,KAAMA,EAAME,MAAOxD,EAAM+B,UAAWU,EAAQC,MAC3D,E,UCtBMM,GAAYC,aAAW,iBAAO,CAClCQ,MAAO,CACLC,MAAO,OACPC,OAAQ,QAEX,IAacC,GAN2C,SAAC5E,GACzD,IAAMyD,EAAUO,KAChB,EAA+BhE,EAAvB6E,WAAG,MAAG,GAAE,IAAe7E,EAAb8E,WAAG,MAAG,GAAE,EAC1B,OAAO,cAACC,GAAA,EAAM,CAACF,IAAKA,EAAKC,IAAKA,EAAK/B,UAAWU,EAAQgB,OACxD,E,4DCsDMO,GAAuD,CAC3DC,WAAW,EACXC,MAAO,GACPC,KANoD,CAAC,GAgBxCC,GAFbzE,IAAMC,cAAcoE,ICpEPK,GAdwC,SAACrF,GACtD,IAAQC,EAA4BD,EAA5BC,SAAS,EAAmBD,EAAlBsF,gBAAQ,MAAG,GAAE,EAC/B,OACE,eAACnC,EAAA,EAAI,CAACC,WAAS,YACZkC,GACC,cAAC3B,EAAA,EAAU,CAACC,QAAQ,QAAQM,MAAM,QAAO,SACtCoB,IAGJrF,IAGP,E,UCMesF,I,OAhBkC,SAAH,OAAMN,EAAS,EAATA,UAAWO,EAAM,EAANA,OAAM,OACnE,mCACGP,EACC,eAAC9B,EAAA,EAAI,CAACM,QAAS,CAAEC,KAAM,sBAAuB,UAC5C,cAAC+B,GAAA,EAAgB,IACjB,eAAC9B,EAAA,EAAU,CACTC,QAAQ,QACRH,QAAS,CAAEC,KAAM,6BAA8B,UAChD,qBACoB8B,EAAO,YAG5B,MACH,GCpBUE,GATG,CAChBC,uBACE,yEACFC,uBACE,gFACFC,6BACE,0FC0DWC,I,OA/Ce,WAAO,IAAD,IAClC,EAAmClD,qBAAWwC,IAAtCH,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KACpBY,EAAa,OAAJZ,QAAI,IAAJA,OAAI,EAAJA,EAAMY,OACfC,EAAwB,QAAjB,EAAO,OAAJb,QAAI,IAAJA,OAAI,EAAJA,EAAMc,gBAAQ,QAAI,GAC5BC,EAAuB,QAAhB,EAAO,OAAJf,QAAI,IAAJA,OAAI,EAAJA,EAAMe,eAAO,QAAI,GACjC,EAA+C,OAANH,QAAM,IAANA,IAAU,CAAC,EAAC,IAA7CI,iBAAS,MAAG,GAAE,MAAEC,eAAO,MAAG,GAAE,EAC9BC,EAAuBF,EAE7B,OACE,qCACE,eAACG,GAAA,EAAI,CACHC,UAAU,KACV,aAAW,uBACX9C,QAAS,CAAEC,KAAM,sBAAuB,UAEvC0C,GACC,eAACI,GAAA,EAAQ,WACP,cAACC,GAAA,EAAY,UACX,qBACE1D,UAAU,wBACV2D,wBAAyB,CAAEC,OAAQN,OAGvC,cAACO,GAAA,EAAY,CAACC,QAAST,OAG1BJ,GACC,eAACQ,GAAA,EAAQ,WACP,cAACC,GAAA,EAAY,UAAEK,KAAM,kBACrB,cAACF,GAAA,EAAY,CAACC,QAASb,OAG1BE,GACC,eAACM,GAAA,EAAQ,WACP,cAACC,GAAA,EAAY,UAAEK,KAAM,yBACrB,cAACF,GAAA,EAAY,CAACC,QAASX,WAI3BjB,GAAaC,GACb,cAAC,GAAY,CAACI,SAAUI,GAAUG,+BAEpC,cAAC,GAAe,CAACZ,UAAW8B,QAAQ9B,GAAYO,OAAO,aAG7D,GC4BewB,I,OAnEU,WAAO,IAAD,IACrB7B,EAASvC,qBAAWwC,IAApBD,KACA8B,EAA6CpG,EAAvBqG,EAAuBrG,EAC/CG,EAAiB,QAAb,EAAO,OAAJmE,QAAI,IAAJA,OAAI,EAAJA,EAAMnE,YAAI,QAAI,GACrBmG,EAA2B,QAAlB,EAAO,OAAJhC,QAAI,IAAJA,OAAI,EAAJA,EAAMgC,iBAAS,QAAI,GAErC,OACE,eAACC,GAAA,EAAI,CAAC3D,QAAS,CAAEC,KAAM,qBAAsB,UAC3C,cAAC2D,GAAA,EAAW,UACV,eAAClE,EAAA,EAAI,WACH,cAACA,EAAA,EAAI,CACHG,MAAI,EACJC,GAAI,GACJE,QAAS,CAAEC,KAAM,mCAAoC,SAEpD5C,GACCA,EAAUwG,KAAI,SAACC,GAAQ,OACrB,cAAC,GAAQ,eAAwBA,GAAV,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAUxG,GAAoB,MAGnD,cAACoC,EAAA,EAAI,CACHG,MAAI,EACJC,GAAI,GACJE,QAAS,CAAEC,KAAM,mCAAoC,SAErD,cAAC,GAAW,CAACoB,IAAKqC,EAAWtC,IAAI,4BAEnC,cAAC1B,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SAChB,cAACI,EAAA,EAAU,CAACC,QAAQ,KAAK4D,MAAM,SAAQ,SACpCxG,MAGL,cAACmC,EAAA,EAAI,CACHG,MAAI,EACJC,GAAI,GACJE,QAAS,CAAEC,KAAM,mCAAoC,SAErD,cAAC,GAAW,WAIlB,eAAC+D,GAAA,EAAW,CAAChE,QAAS,CAAEC,KAAM,+BAAgC,UAC3DuD,GACC,cAACS,GAAA,EAAM,CACLpD,KAAK,QACLV,QAAQ,WACR+D,UAAW,cAAC,KAAoB,IAChCxH,QAAS,kBAAMoC,EAAa0E,EAAqB,EAAC,SACnD,gBAIFC,GACC,cAACQ,GAAA,EAAM,CACLpD,KAAK,QACLV,QAAQ,WACR+D,UAAW,cAAC,KAAU,IACtBxH,QAAS,kBAAMoC,EAAa2E,EAAmB,EAAC,SACjD,gBAOX,G,4DCnDeU,I,OAlBkD,SAAC5H,GAChE,IAAQ6H,EAAsB7H,EAAtB6H,QAAS5H,EAAaD,EAAbC,SACjB,OACE,eAAC6H,GAAA,EAAS,CAACrE,QAAS,CAAEC,KAAM,wBAAyB,UACnD,cAACqE,GAAA,EAAgB,CACfC,WAAY,cAAC,KAAc,IAC3B,0BAAkBH,EAAO,YACzB9G,GAAE,UAAK8G,EAAO,WAAU,SAExB,cAAClE,EAAA,EAAU,CAAC4C,UAAU,MAAK,SAAEsB,MAE/B,cAACI,GAAA,EAAgB,UACf,cAACtE,EAAA,EAAU,UAAE1D,QAIrB,GCgDeiI,I,OAhES,WAAO,IAAD,EACpBC,EAA+CtH,EAAtCuH,EAAsCvH,EAAfwH,EAAexH,EAC/CyH,EAAoBnH,EAAVoH,EAAUpH,EACpBgE,EAASvC,qBAAWwC,IAApBD,KACFqD,EAAe,QAAZ,EAAO,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,WAAG,QAAI,GACzB,OACE,eAACC,EAAA,EAAK,CAAC1F,UAAU,mBAAkB,UACjC,cAACY,EAAA,EAAU,CAACC,QAAQ,KAAKH,QAAS,CAAEC,KAAM,4BAA6B,SAAC,aAGvE8E,GACC,cAAC7E,EAAA,EAAU,CACTC,QAAQ,QAERH,QAAS,CAAEC,KAAM,+BAAgC,SAEhD8E,GAHIE,gBAMRP,GACCA,EAAQb,KAAI,SAACqB,GAAW,OACtB,cAAChF,EAAA,EAAU,CACTC,QAAQ,QAERH,QAAS,CAAEC,KAAM,+BAAgC,SAEhDiF,GAHID,eAIM,IAEjB,cAACvF,EAAA,EAAI,CAACC,WAAS,WACZgF,GACC,cAAC,GAAiB,CAACP,QAAQ,4BAA2B,SACnDO,MAIP,eAACjF,EAAA,EAAI,CAACC,WAAS,YACb,cAACO,EAAA,EAAU,CAACC,QAAQ,KAAKgF,cAAY,WAClCP,IAEFC,GACC,eAAC3E,EAAA,EAAU,CAACC,QAAQ,QAAO,UACxBkD,KAAM,gBAAM,mBAAiB,IAC9B,cAACY,GAAA,EAAM,CAACxD,MAAM,UAAU/D,QAAS,kBAAMoC,EAAa+F,EAAS,EAAC,SAAC,aAErD,IACTC,GACC,iCAAM,MACA,IACJ,cAACb,GAAA,EAAM,CACLxD,MAAM,UACN/D,QAAS,kBAAMoC,EAAa,SAAD,OAAUgG,EAAK,SAAQ,EAAC,SACpD,qBAUjB,GC1DeM,I,OAZW,WAAH,OACrB,eAAC1F,EAAA,EAAI,CAACC,WAAS,EAACK,QAAS,CAAEC,KAAM,gCAAiC,UAChE,cAACP,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,IACf,cAAC3F,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,EAAGrF,QAAS,CAAEC,KAAM,+BAAgC,SACjE,cAAC,GAAgB,MAEnB,cAACP,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,EAAGrF,QAAS,CAAEC,KAAM,4BAA6B,SAC9D,cAAC,GAAK,QAEH,G,UCSMqF,I,cAfyB,SAAC/I,GACvC,IAAQgJ,EAAYhJ,EAAZgJ,QACR,OACE,sBAAMjG,UAAU,cAAa,SAC1BiG,GACCA,EAAQ1B,KAAI,SAAC2B,GAAQ,OACnB,uBAAqBlG,UAAU,oBAAmB,UAChD,sBAAMA,UAAU,yBAAwB,SAAE+D,KAAM,kBAChD,sBAAM/D,UAAU,yBAAwB,SAAEkG,MAFjCP,eAGJ,KAIjB,GCsDeQ,GAtDgC,SAAClJ,GAC9C,IACEK,EAMEL,EANFK,MACA8I,EAKEnJ,EALFmJ,SACAC,EAIEpJ,EAJFoJ,SACA1H,EAGE1B,EAHF0B,YACAC,EAEE3B,EAFF2B,mBACA0H,EACErJ,EADFqJ,SAEF,OACE,eAACjC,GAAA,EAAI,CAAC3D,QAAS,CAAEC,KAAM,cAAe,UACpC,sBAAKX,UAAU,sBAAqB,UAClC,eAACsE,GAAA,EAAW,CAAC5D,QAAS,CAAEC,KAAM,uBAAwB,UACnDrD,GACC,cAACsD,EAAA,EAAU,CACTC,QAAQ,QACRH,QAAS,CAAE6F,MAAO,qBAAsB,SAEvCjJ,IAGJ8I,GACC,cAACxF,EAAA,EAAU,CAACC,QAAQ,YAAYM,MAAM,gBAAe,SAClDiF,IAGJC,GACC,cAACzF,EAAA,EAAU,CAACC,QAAQ,YAAYM,MAAM,gBAAe,SAClDkF,IAGJ1H,GACC,cAACiC,EAAA,EAAU,CAACC,QAAQ,QAAO,SAAElC,OAGhCC,GACC,qBAAKoB,UAAU,iCAAgC,SAC7C,cAAC,GAAiB,CAAC8E,QAAQ,OAAM,SAC/B,cAAC,GAAS,CAACmB,QAASrH,WAK3B0H,GACC,cAACE,GAAA,EAAS,CACRC,MAAOH,EACPhJ,MAAM,8BACNoD,QAAS,CAAEC,KAAM,yBAK3B,ECnBe+F,I,OA1CiB,WAAH,OAC3B,cAACtG,EAAA,EAAI,CAACM,QAAS,CAAEC,KAAM,mBAAoB,SACzC,eAACoE,GAAA,EAAS,WACR,cAACC,GAAA,EAAgB,CACfC,WAAY,cAAC,KAAc,IAC3B,gBAAc,0BACdjH,GAAG,yBAAwB,SAE3B,eAAC4C,EAAA,EAAU,CAACC,QAAQ,KAAKgF,cAAY,YACnC,sBAAM7F,UAAU,8BAA6B,SAAE+D,KAAM,kBAAc,IACnE,+BAAM,oBAGV,cAACmB,GAAA,EAAgB,UACf,cAAC9E,EAAA,EAAI,CAACC,WAAS,WACZsG,GACCA,EAAkBpC,KAAI,SAACqC,GACrB,IACE9H,EAKE8H,EALF9H,YACAC,EAIE6H,EAJF7H,YACAL,EAGEkI,EAHFlI,SACAC,EAEEiI,EAFFjI,YACAC,EACEgI,EADFhI,mBAEF,OACE,cAACwB,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SAChB,cAAC,GAAQ,CACPlD,MAAOwB,EACPuH,SAAU3H,EACVC,YAAaA,EACbC,mBAAoBA,EACpB0H,SAAUvH,KANU4G,eAU5B,YAIH,GCKMkB,I,OA5CkB,WAAH,OAC5B,cAACzG,EAAA,EAAI,CAACM,QAAS,CAAEC,KAAM,oBAAqB,SAC1C,eAACoE,GAAA,EAAS,WACR,cAACC,GAAA,EAAgB,CACfC,WAAY,cAAC,KAAc,IAC3B,gBAAc,2BACdjH,GAAG,0BAAyB,SAE5B,eAAC4C,EAAA,EAAU,CAACC,QAAQ,KAAKgF,cAAY,YACnC,sBAAM7F,UAAU,+BAA8B,SAAE+D,KAAM,yBACtD,+BAAM,yBAGV,cAACmB,GAAA,EAAgB,UACf,cAAC9E,EAAA,EAAI,CAACC,WAAS,WACZyG,GACCA,EAAoBvC,KAAI,SAACwC,GACvB,IACEzI,EAMEyI,EANFzI,KACAC,EAKEwI,EALFxI,YACAC,EAIEuI,EAJFvI,YACAE,EAGEqI,EAHFrI,SACAC,EAEEoI,EAFFpI,YACAC,EACEmI,EADFnI,mBAEF,OACE,cAACwB,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SAChB,cAAC,GAAQ,CACPlD,MAAOgB,EACP8H,SAAU7H,EACV8H,SAAU3H,EACVC,YAAaA,EACbC,mBAAoBA,EACpB0H,SAAU9H,KAPUmH,eAW5B,YAIH,GC5BMqB,I,OApBoB,WAAH,OAC9B,eAAC5G,EAAA,EAAI,CAACC,WAAS,EAACK,QAAS,CAAEC,KAAM,wBAAyB,UACxD,cAACP,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,IACf,cAAC3F,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,GAAIrF,QAAS,CAAEC,KAAM,+BAAgC,SAClE,eAACP,EAAA,EAAI,CACHC,WAAS,EACTC,QAAS,EACTI,QAAS,CAAEC,KAAM,uCAAwC,UAEzD,cAACP,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,EAAE,SACf,cAAC,GAAa,MAEhB,cAAC3F,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,EAAE,SACf,cAAC,GAAc,aAIhB,G,4DCmFMkB,I,OApF8C,SAAChK,GAAW,IAAD,QAC9DiK,EAAgBjK,EAAhBiK,YACR,EAOe,OAAXA,QAAW,IAAXA,IAAe,CAAC,EANlBC,EAAoB,EAApBA,qBACAC,EAAmB,EAAnBA,oBACAC,EAAS,EAATA,UACAC,EAAK,EAALA,MACAC,EAAS,EAATA,UACAC,EAAe,EAAfA,gBAGF,EAA6C,OAAfA,QAAe,IAAfA,IAAmB,CAAC,EAAC,IAA3CvJ,YAAI,MAAG,GAAE,EAAEwJ,EAAM,EAANA,OACbC,EAAwC,QAA9B,EAAS,OAAND,QAAM,IAANA,GAAe,QAAT,EAANA,EAAQE,eAAO,WAAT,EAAN,EAAiBD,kBAAU,QAAI,EAC5CE,EAAyC,QAA1B,EAAS,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQG,uBAAe,QAAI,GAC7CC,EAA+B,QAArB,EAAS,OAANJ,QAAM,IAANA,OAAM,EAANA,EAAQI,kBAAU,QAAI,GAEzC,OACE,eAACzH,EAAA,EAAI,CAACC,WAAS,EAACK,QAAS,CAAEC,KAAM,sBAAuB,UACtD,eAACP,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,QAAS,CAAEC,KAAM,0BAA2B,UAC7D,eAACC,EAAA,EAAU,CACTC,QAAQ,UACRH,QAAS,CAAEC,KAAM,oCAAqC,UAEtD,sBACEX,UAAU,yCACV8H,MAAO,CACLC,WAAYZ,KAGhB,+BAAOC,OAET,eAACxG,EAAA,EAAU,CACTC,QAAQ,UACRH,QAAS,CAAEC,KAAM,4BAA6B,UAE7CoD,KAAM,gBACP,iCAAM,IAAEsD,QAEV,eAACzG,EAAA,EAAU,CACTC,QAAQ,UACRH,QAAS,CAAEC,KAAM,4BAA6B,UAE7CoD,KAAM,WACP,+BAAOuD,OAET,eAAC1G,EAAA,EAAU,CACTC,QAAQ,UACRH,QAAS,CAAEC,KAAM,6BAA8B,UAE9CoD,KAAM,iBACP,iCAAOwD,EAAU,eAGrB,eAACnH,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,QAAS,CAAEC,KAAM,6BAA8B,UAChE,eAACC,EAAA,EAAU,CACTC,QAAQ,UACRH,QAAS,CAAEC,KAAM,kCAAmC,UAEpD,+BAAOoD,KAAM,YACb,+BAAO6D,OAET,eAAChH,EAAA,EAAU,CACTC,QAAQ,UACRH,QAAS,CAAEC,KAAM,kCAAmC,UAEpD,+BAAOoD,KAAM,YACb,iCACGiE,KAAO,IAAIC,KAAKJ,IAAaK,UAAU,OAAI,+BAAOjK,UAGvD,eAAC2C,EAAA,EAAU,CACTC,QAAQ,UACRH,QAAS,CAAEC,KAAM,kCAAmC,UAEpD,+BAAOoD,KAAM,YACb,iCACG2D,EAAW,eAAY,iCAAM,UAAQzJ,gBAMlD,GCKekK,I,OAtFgC,SAAClL,GAAW,IAAD,0BAChDmL,EAAgBnL,EAAhBmL,YACFnK,EAAwB,QAApB,EAAc,OAAXmK,QAAW,IAAXA,OAAW,EAAXA,EAAanK,YAAI,QAAI,GAC5BU,EAAsC,QAA3B,EAAc,OAAXyJ,QAAW,IAAXA,OAAW,EAAXA,EAAazJ,mBAAW,QAAI,GAC1CM,EAA4D,QAAvC,EAAc,OAAXmJ,QAAW,IAAXA,GAA6B,QAAlB,EAAXA,EAAaC,wBAAgB,WAAlB,EAAX,EAA+BC,aAAK,QAAI,GAChEf,EAAkC,QAAzB,EAAc,OAAXa,QAAW,IAAXA,OAAW,EAAXA,EAAab,iBAAS,QAAI,EACtCF,EAAkC,QAAzB,EAAc,OAAXe,QAAW,IAAXA,OAAW,EAAXA,EAAaf,iBAAS,QAAI,EACtCkB,EAAsC,QAA3B,EAAc,OAAXH,QAAW,IAAXA,OAAW,EAAXA,EAAaG,mBAAW,QAAI,GAC1CC,EAA6B,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAaI,gBAC/BrB,EAA6C,QAAzB,EAAkB,OAAfqB,QAAe,IAAfA,OAAe,EAAfA,EAAiBrH,aAAK,QAAI,GACjDiG,EAA2C,QAAxB,EAAkB,OAAfoB,QAAe,IAAfA,OAAe,EAAfA,EAAiBvK,YAAI,QAAI,GAC/CwK,EAAgC,QAAxB,EAAc,OAAXL,QAAW,IAAXA,OAAW,EAAXA,EAAaK,gBAAQ,QAAI,GACpCC,EAA2B,OAAXN,QAAW,IAAXA,OAAW,EAAXA,EAAaO,KAE7BnB,GAD0C,QAAvB,EAAgB,OAAbkB,QAAa,IAAbA,OAAa,EAAbA,EAAeJ,aAAK,QAAI,IACR,GACtCM,EAAwB,OAAXR,QAAW,IAAXA,OAAW,EAAXA,EAAaQ,WAC1BnJ,EAAsB,QAAnB,EAAc,OAAX2I,QAAW,IAAXA,OAAW,EAAXA,EAAa3I,WAAG,QAAI,GAEhC,OACE,eAAC4E,GAAA,EAAI,CAAC3D,QAAS,CAAEC,KAAM,aAAc,UACnC,eAAC2D,GAAA,EAAW,CAAC5D,QAAS,CAAEC,KAAM,qBAAsB,UAClD,cAACP,EAAA,EAAI,CAACM,QAAS,CAAEC,KAAM,0BAA2B,SAChD,cAACP,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,QAAS,CAAEC,KAAM,yBAA0B,SAC3D3B,EAAiBC,GAAuBsF,KAAI,SAACnF,GAAW,IAAD,EAChDE,EAAuB,QAAd,EAAQ,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOnB,YAAI,QAAI,GAC3BD,EAAU,OAALoB,QAAK,IAALA,OAAK,EAALA,EAAOpB,GAClB,OACE,+BACE,cAAC,GAAQ,CAACC,KAAMqB,EAAWtB,GAAIA,KADtB2H,eAIf,QAGJ,eAACvF,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,QAAS,CAAEC,KAAM,0BAA2B,UAC7D,eAACP,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,QAAS,CAAEC,KAAM,0BAA2B,UAC5D1C,GACC,eAAC2C,EAAA,EAAU,CAACC,QAAQ,KAAKgF,cAAY,YAClC9B,KAAM,sBAAO,IAAE9F,KAGnBU,GACC,cAACiC,EAAA,EAAU,CAACC,QAAQ,QAAQgF,cAAY,WACrClH,OAIP,cAACyB,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAIE,QAAS,CAAEC,KAAM,uBAAwB,SAC1D,cAAC,GAAe,CACduG,YAAa,CACXC,uBACAC,sBACAC,YACAC,MAA6B,QAAxB,EAAY,OAAVsB,QAAU,IAAVA,OAAU,EAAVA,EAAYlB,kBAAU,QAAI,EACjCH,YACAkB,WACAjB,6BAMV,eAAC9C,GAAA,EAAW,CAAChE,QAAS,CAAEC,KAAM,qBAAsB,UAClD,cAACgE,GAAA,EAAM,CACLpD,KAAK,QACLV,QAAQ,WACRzD,QAAS,kBAAMoC,EAAaC,EAAI,EAChCmF,UAAW,cAAC,KAAU,IAAI,SAC3B,WAGA2D,GACC,cAAC5D,GAAA,EAAM,CACLpD,KAAK,QACLV,QAAQ,WACR+D,UAAW,cAAC,KAAQ,IACpBxH,QAAS,kBAAMoC,EAAa+I,EAAY,EAAC,SAC1C,mBAOX,GCxBeM,I,OAjEe,WAC5B,IAQGC,EARH,EAAmCjJ,qBAAWwC,IAAtCH,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KACpB2G,EAAkB,OAAJ3G,QAAI,IAAJA,OAAI,EAAJA,EAAM2G,YACc,GAAN,OAAXA,QAAW,IAAXA,IAAe,CAAC,GAA/BC,aAAK,MAAG,GAAE,EAElB,EAAgCpL,IAAMqL,SAAyB,UAAS,mBAAjEC,EAAQ,KAAEC,EAAW,KAQ5B,OACE,eAAC/I,EAAA,EAAI,CAACC,WAAS,EAACK,QAAS,CAAEC,KAAM,iBAAkB,UACjD,cAACP,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,IACf,cAAC3F,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,GAAIrF,QAAS,CAAEC,KAAM,wBAAyB,SAC3D,eAACoE,GAAA,EAAS,CACRmE,SAAuB,WAAbA,EACVE,UAVLN,EAU4B,SAVV,SAACO,EAA8BC,GAChDH,IAAYG,GAAcR,EAC5B,GAQuC,UAEjC,cAAC9D,GAAA,EAAgB,CACfC,WAAY,cAAC,KAAc,IAC3B,gBAAc,kBACdjH,GAAG,iBAAgB,SAEnB,eAAC4C,EAAA,EAAU,CACTC,QAAQ,KACRH,QAAS,CAAEC,KAAM,iCAAkC,UAElDoD,KAAM,gBAAM,4BAGjB,cAACmB,GAAA,EAAgB,UACf,cAAC9E,EAAA,EAAI,CAACC,WAAS,EAACK,QAAS,CAAEC,KAAM,gCAAiC,SAChE,eAACP,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACxB0I,GACCA,EAAMzE,KAAI,SAACgF,GAAI,OACb,cAACnJ,EAAA,EAAI,CACHG,MAAI,EACJiJ,GAAI,EACJzD,GAAI,EACJvF,GAAI,GAEJE,QAAS,CAAEC,KAAM,2BAA4B,SAE7C,cAAC,GAAQ,CACPyH,YAAW,eACD,OAAJmB,QAAI,IAAJA,OAAI,EAAJA,EAAME,SALT9D,eAQA,KAETzD,GAAaC,GACb,cAAC,GAAY,CAACI,SAAUI,GAAUC,yBAEpC,cAAC,GAAe,CAACV,YAAaA,EAAWO,OAAO,yBAQhE,GCKeiH,I,OArEoB,WACjC,IAQGZ,EARH,EAAmCjJ,qBAAWwC,IAAtCH,EAAS,EAATA,UAAWC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KACpBuH,EAAmB,OAAJvH,QAAI,IAAJA,OAAI,EAAJA,EAAMuH,aACc,GAAN,OAAZA,QAAY,IAAZA,IAAgB,CAAC,GAAhCrB,aAAK,MAAG,GAAE,EAElB,EAAgC1K,IAAMqL,UAAyB,GAAM,mBAA9DC,EAAQ,KAAEC,EAAW,KAQ5B,OACE,eAAC/I,EAAA,EAAI,CAACC,WAAS,EAACK,QAAS,CAAEC,KAAM,sBAAuB,UACtD,cAACP,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,IACf,cAAC3F,EAAA,EAAI,CAACG,MAAI,EAACwF,GAAI,GAAIrF,QAAS,CAAEC,KAAM,6BAA8B,SAChE,eAACoE,GAAA,EAAS,CACRmE,SAAuB,WAAbA,EACVE,UAVLN,EAU4B,SAVV,SAACO,EAA8BC,GAChDH,IAAYG,GAAcR,EAC5B,GAQuC,UAEjC,cAAC9D,GAAA,EAAgB,CACfC,WAAY,cAAC,KAAc,IAC3B,gBAAc,kBACdjH,GAAG,iBAAgB,SAEnB,eAAC4C,EAAA,EAAU,CACTC,QAAQ,KACRH,QAAS,CAAEC,KAAM,sCAAuC,UAEvDoD,KAAM,sBAAO,qCAGlB,cAACmB,GAAA,EAAgB,UACf,cAAC9E,EAAA,EAAI,CACHC,WAAS,EACTK,QAAS,CAAEC,KAAM,qCAAsC,SAEvD,eAACP,EAAA,EAAI,CAACC,WAAS,EAACC,QAAS,EAAE,UACxBgI,GACCA,EAAM/D,KAAI,SAACqF,GAAU,OACnB,cAACxJ,EAAA,EAAI,CACHG,MAAI,EACJiJ,GAAI,EACJzD,GAAI,EACJvF,GAAI,GAEJE,QAAS,CAAEC,KAAM,gCAAiC,SAElD,cAAC,GAAQ,CACPyH,YAAW,eACLwB,MALHjE,eAQA,KAETzD,GAAaC,GACb,cAAC,GAAY,CAACI,SAAUI,GAAUE,yBAEpC,cAAC,GAAe,CAACX,YAAaA,EAAWO,OAAO,yBAQhE,G,8GC7EMxB,GAAYC,aAAW,SAAC2I,GAAK,MAAM,CACvClJ,KAAM,CACJ,QAAS,CACPS,OAAQyI,EAAMvJ,QAAQ,MAG3B,IAmEcwJ,GAjEe,WAC5B,IAAMpJ,EAAUO,KAEd8I,EAME3L,EALF0B,EAKE1B,EAJFmH,EAIEnH,EAHF4L,EAGE5L,EAFF6L,EAEE7L,EADF8L,EACE9L,EAEJ,OACE,sBAAK4B,UAAWU,EAAQC,KAAK,UAC1BoJ,GACC,cAACxM,EAAA,EAAU,CACT,aAAW,cACXH,QAAS,kBAAMoC,EAAauK,EAAO,EAAC,SAEpC,cAAC,KAAU,MAGdjK,GACC,cAACvC,EAAA,EAAU,CACT,aAAW,aACXH,QAAS,kBAAMoC,EAAaM,EAAW,EAAC,SAExC,cAAC,IAAS,MAGbyF,GACC,cAAChI,EAAA,EAAU,CACT,aAAW,gBACXH,QAAS,kBAAMoC,EAAa+F,EAAS,EAAC,SAEtC,cAAC,KAAY,MAGhByE,GACC,cAACzM,EAAA,EAAU,CACT,aAAW,eACXH,QAAS,kBAAMoC,EAAawK,EAAQ,EAAC,SAErC,cAAC,KAAW,MAGfC,GACC,cAAC1M,EAAA,EAAU,CACT,aAAW,gBACXH,QAAS,kBAAMoC,EAAayK,EAAS,EAAC,SAEtC,cAAC,KAAY,MAGhBC,GACC,cAAC3M,EAAA,EAAU,CACT,aAAW,iBACXH,QAAS,kBAAMoC,EAAa0K,EAAU,EAAC,SAEvC,cAAC,KAAa,QAKxB,E,oBC1EMjJ,GAAYC,aAAW,SAAC2I,GAAK,MAAM,CACvClJ,KAAM,CACJT,SAAU,QACViK,OAAQN,EAAMvJ,QAAQ,GACtB8J,MAAOP,EAAMvJ,QAAQ,IAExB,IA4Bc+J,GAtBG,SAACpN,GACjB,IAAQC,EAAwBD,EAAxBC,SAAUoN,EAAcrN,EAAdqN,UACZ5J,EAAUO,KACVsJ,EAAUC,eAUhB,OACE,cAACC,GAAA,EAAI,CAACC,GAAIH,EAAQ,SAChB,qBAAKnN,QAVW,WAClB,IAAMuN,EAASC,SAASC,cAAc,IAAD,OAAKP,IAEtCK,GACFA,EAAOG,eAAe,CAAEC,SAAU,SAAUC,MAAO,UAEvD,EAI+B1M,KAAK,eAAe0B,UAAWU,EAAQC,KAAK,SACpEzD,KAIT,ECNe+N,I,OAvBU,WAAH,OACpB,mCACE,eAAC7K,EAAA,EAAI,CAACC,WAAS,EAACK,QAAS,CAAEC,KAAM,qBAAsB,UACrD,cAACP,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,IACf,eAACJ,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,UAChB,cAACI,EAAA,EAAU,CAACC,QAAQ,YAAW,SAAC,wCAGhC,cAACT,EAAA,EAAI,CAACC,WAAS,WACb,cAACD,EAAA,EAAI,CAACG,MAAI,EAACC,GAAI,GAAG,SAChB,cAAC0K,GAAoB,cAK7B,cAAC,GAAS,CAACZ,UAAU,qBAAoB,SACvC,cAACa,GAAA,EAAG,CAAChK,MAAM,YAAYI,KAAK,QAAQ,aAAW,qBAAoB,SACjE,cAAC,KAAmB,UAGjB,GCjCL6J,GACG,UADHA,GAEE,OAGFC,GACQ,CACVC,MAAO,UACPC,KAAM,QCRGC,GACL,OADKA,GAEJ,QCiBHvK,GAAYC,aAAW,SAAC2I,GAAK,MAAM,CACvClJ,KAAM,CACJ8K,QAAS,OACTC,aAAc,EACdC,cAAe,SACfC,UAAW,UACXhK,OAAQ,OACR1D,gBACE2L,EAAMgC,QAAQC,OAASN,GACnBH,GAA0BE,KAC1BF,GAA0BC,OAEnC,IA0EcS,GApEQ,WACrB,IAAMrL,EAAUO,KAGhB,EAAkDgI,oBAAS,iBAAO,CAChE/G,WAAW,EACXC,MAAO,GACPC,KAAM,CAAC,EACR,IAAE,mBAJI4J,EAAiB,KAAEC,EAAoB,KAWxCC,EAAoB,iDAAG,wGAOrB,OAPqB,SAEzBD,GAAqB,SAACE,GAAqB,kCACtCA,GAAqB,IACxBjK,WAAW,EACXC,MAAO,GACPC,KAAM,CAAC,GAAC,IACN,SACiBgK,IAAMC,IAAI,GAAD,OACzB5N,GAAsB,yBACzB,KAAD,EAFK6N,EAAM,OAGNlK,EAA+B,QAA3B,EAAS,OAANkK,QAAM,IAANA,GAAY,QAAN,EAANA,EAAQC,YAAI,OAAM,QAAN,EAAZ,EAAcA,YAAI,WAAZ,EAAN,EAAoBnK,YAAI,QAAI,CAAC,EAE1C6J,GAAqB,SAACE,GAAqB,kCACtCA,GAAqB,IACxBjK,WAAW,EACXC,MAAO,GACPC,KAAK,eAAMA,IAAM,IACf,gDAEEoK,EAAM,KACZC,QAAQC,IAAI,EAAD,IAEXT,GAAqB,SAACE,GAAqB,wCACtCA,GAAqB,IACxBjK,WAAW,EACXC,MAAsB,QAAjB,EAAQ,OAANqK,QAAM,IAANA,OAAM,EAANA,EAAQnJ,eAAO,QAAI,GAC1BjB,KAAM,CAAC,GAAC,IACN,yDAEP,kBA9ByB,mCAuC1B,OAJAuK,qBAAU,WACRT,GACF,GAAG,IAGD,cAACxG,EAAA,EAAK,CAACkH,UAAW,EAAG5M,UAAWU,EAAQC,KAAK,SAC3C,eAAC,GAAqBkM,SAAQ,CAACC,MAAK,eAAOd,GAAoB,UAC7D,cAAC,GAAM,IACP,cAAC,GAAO,IACR,cAAC,GAAgB,IACjB,cAAC,GAAW,IACZ,cAAC,GAAe,IAChB,cAAC,GAAM,QAIf,ECvCee,GApDO,WAEpB,IAAMC,EACJtN,OAAOuN,aAAaC,QAAQ,8BAC5B1B,GAEF,EAAkCvC,mBAChC+D,GACD,mBAFMvP,EAAS,KAAE0P,EAAY,KAuBxBtD,EAAQuD,YAAe,CAC3BvB,QAAS,CACPC,KAAMrO,EACNqG,QAAS,CACPuJ,KACE5P,IAAc+N,GACVJ,GACAA,OAKZ,OACE,cAACkC,EAAA,EAAa,CAACzD,MAAOA,EAAM,SAC1B,cAAClM,EAAakP,SAAQ,CAACC,MAAO,CAAErP,YAAWC,gBA9BvB,WACtByP,GAAa,SAACI,GACZ,IAAMC,EACJD,IAAa/B,GACRA,GACAA,GAMP,OAJA9L,OAAOuN,aAAaQ,QAClB,4BACAD,GAEKA,CACT,GACF,GAiBiE,SAC3D,cAAC9H,EAAA,EAAK,UACJ,cAAC,GAAI,SAKf,E,OCvDAgI,IAASC,OAAO,cAAC,GAAG,IAAK/C,SAASgD,eAAe,Q","file":"static/js/main.886babfc.chunk.js","sourcesContent":["import React from 'react';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\n\ninterface ITooltipIconButton {\n  children: React.ReactNode;\n  tooltipTitle: string;\n  onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n}\n\n/**\n * Icon button wrapped in a tooltip.\n * @prop children - The Icon to display.\n * @prop tooltipTitle - The tooltip text to show.\n * @prop onClick - IconButton click event handler\n */\nconst ToolTipIconButton: React.FC<Partial<ITooltipIconButton>> = (props) => {\n  const { children, tooltipTitle = '', onClick } = props;\n  return (\n    <Tooltip title={tooltipTitle}>\n      <IconButton onClick={onClick}>{children}</IconButton>\n    </Tooltip>\n  );\n};\n\nexport default ToolTipIconButton;\n","import React from 'react';\n\n// type alias for theme mode type\nexport type ThemeModeType = 'light' | 'dark' | undefined;\n\n// interface for ThemeContext\ninterface IThemeContext {\n  themeMode: ThemeModeType;\n  toggleThemeMode: () => void;\n}\n\n// default value for theme context\nconst defaultThemeValue: IThemeContext = {\n  themeMode: 'light',\n  toggleThemeMode: () => {},\n};\n\n/**\n * Theme context to pass theme data through the nested component tree.\n */\nexport const ThemeContext: React.Context<IThemeContext> = React.createContext(\n  defaultThemeValue\n);\n","import {\n  IBioData,\n  SkillTags,\n  ISocialMediaLinks,\n  WorkExperiences,\n  EducationInfo,\n} from './portfolio-info.types';\n\n// Bio Data Section\nconst bioData: IBioData = {\n  aboutMe: [\n    'My daily routine involves the development of highly efficient and robust applications that simplify business problems. I enjoy working in a startup culture and love to take product ownership while working, and also challenging my abilities along with helping and motivating my teammates to meet strict requirements and deadlines.',\n    'I like to solve challenges and keep myself up to date with the cutting edge technologies.',\n  ],\n  recentChallengeSolved:\n    'In my recent employment organization, I faced my most challenging job of creating third party embed JavaScript widgets which were intended to be configured by the clients using our dashboard and to be placed on their websites for reputation management. I was solely responsible for the accomplishment of this task, starting from scratch. It was a new thing for me since in the past I had already created some static JavaScript widgets but this time they were highly dynamic and with hell lot of configurations and also the challenge of making them appear the same on every client systems. To overcome this challenge I did some research by going through online resources and books (Third party Js etc) and finally reverse engineering the widgets of some competitors who were already doing something that we were trying to achieve. Finally, I was able to code the widget bootstrap script and also the widgets themselves and made them highly configurable by creating a widget management module inside the dashboard. Those widgets are still live and working and loved by the clients for displaying their reputations on their platforms.',\n  bioTagLine:\n    \"Whether you're looking to hire an eager self-starter or build your network, I'd love to hear your story.\",\n  resumeDownloadLink:\n    'https://drive.google.com/file/d/11DTj5WnaARsIIai-fK4zHS9cMf0lDxPl/view?usp=sharing',\n  meetingSchedulerLink: 'https://calendly.com/fmohd195/30min',\n};\n\n// skill tags displayed in Bio section\nconst skillTags: SkillTags = [\n  { id: 1, name: 'JavaScript', backgroundColor: '#F0DB4F', fontColor: '#000' },\n  { id: 2, name: 'Es6+', backgroundColor: '#F0DB4F', fontColor: '#000' },\n  { id: 3, name: 'TypeScript', backgroundColor: '#007ACC', fontColor: '#fff' },\n  { id: 4, name: 'React Js', backgroundColor: '#5ED4F3', fontColor: '#000' },\n  { id: 5, name: 'Redux', backgroundColor: '#785ABC', fontColor: '#fff' },\n  { id: 6, name: 'Next Js', backgroundColor: '', fontColor: '' },\n  { id: 7, name: 'Meteor Js', backgroundColor: '#DF4F4F', fontColor: '#fff' },\n  { id: 8, name: 'Websocket', backgroundColor: '', fontColor: '' },\n  { id: 9, name: 'Node Js', backgroundColor: '#68A063', fontColor: '#fff' },\n  { id: 10, name: 'Express', backgroundColor: '#8CC84B', fontColor: '#fff' },\n  { id: 11, name: 'MongoDB', backgroundColor: '', fontColor: '' },\n  { id: 12, name: 'GraphQL', backgroundColor: '#E863AB', fontColor: '#fff' },\n  { id: 13, name: 'Firebase', backgroundColor: '', fontColor: '' },\n  { id: 14, name: 'Docker', backgroundColor: '#2EB2E6', fontColor: '#fff' },\n  { id: 15, name: 'CI/CD', backgroundColor: '', fontColor: '' },\n  { id: 16, name: 'HTML', backgroundColor: '', fontColor: '' },\n  { id: 17, name: 'CSS', backgroundColor: '', fontColor: '' },\n  { id: 18, name: 'Sass', backgroundColor: '#CD6799', fontColor: '#fff' },\n  {\n    id: 19,\n    name: 'Material Design',\n    backgroundColor: '',\n    fontColor: '',\n  },\n  {\n    id: 20,\n    name: 'Schema Design',\n    backgroundColor: '#E863AB',\n    fontColor: '#fff',\n  },\n  {\n    id: 21,\n    name: 'AWS',\n    backgroundColor: '#DF4F4F',\n    fontColor: '#fff',\n  },\n  {\n    id: 22,\n    name: 'Deployment',\n    backgroundColor: '',\n    fontColor: '',\n  },\n  {\n    id: 23,\n    name: 'PubSub',\n    backgroundColor: '',\n    fontColor: '',\n  },\n  {\n    id: 24,\n    name: 'ORMs',\n    backgroundColor: '#68A063',\n    fontColor: '#fff',\n  },\n];\n\n// social media links\nconst socialMediaLinks: ISocialMediaLinks = {\n  github: 'https://github.com/mhdfaisal/',\n  email: 'fmohd195@gmail.com',\n  mailToLink: 'mailto:fmohd195@gmail.com',\n  telephoneLink: 'tel:+91-9005809583',\n  telephone: '+91-9005809583',\n  linkedIn: 'https://www.linkedin.com/in/mohdfaisal9005/',\n  twitter: 'https://twitter.com/MohdFaisal9005',\n  facebook: false,\n  instagram: false,\n  medium: false,\n  skype: 'live:7ff348f368d1eda6',\n};\n\n// work experience section\nconst workExperiences: WorkExperiences = [\n  {\n    role: 'Sr. Fullstack Engineer (Remote)',\n    companyName: 'Ohceans Pte Ltd, Singapore',\n    companyLogo: `${process.env.PUBLIC_URL}/images/ohceans.png`,\n    duration: 'August 2020 - Present',\n    description:\n      'Leading the development of products that automate the processes in the shipping industry to optimise port call operations, automate digital crew certification verifications, behavior based safety inspection softwares, remote survey and audit tools and simplifying vessel chartering for both hirers and vessel providers by building and delivering innovative and effective solutions.',\n    descriptionBullets: [\n      'Simplified shipment business problems using modern technologies',\n      'Developed a reactive Web Application using Meteor Js for shipment port call optimizations',\n      'Reduced numerous man-hours spent manually updating shipment information',\n      'Optimized Meteor mongo subscriptions for efficient querying and reduced size of mini mongo at client level',\n      ' Lead the development of a product to automate crew certificate verification. Replaced the time consuming mechanical checking method with and automated solution that confirms the authenticity of each certificate against National Authorities’ databases line by line and generated an automated report with highest accuracy rate. The reports generated bear the company letterhead and can be downloaded in the pdf format. Technologies used - (Node.js, MongoDB, TagUI, Puppeteer, React.js, Redux).',\n      'Lead the development of the Behavior Based Safety Software for the shipping industry. Enabled crew members to to report observations, unsafe and at-risk behaviors and conditions with simple to use software, available on any device. Adapted BBS checklists to align with each workers job role, site and tasks. Connected the field to the boardroom to truly understand the underlying causes of reported safety observations from crew members. Automated processes that are manual, repetitive or require consistent follow-ups or closeouts.',\n      'Lead the design, development and deployment of a remote audit progressive web application for crews and shore managers. Allowed creation of dynamic audit forms, supported caching and offline submissions of audit forms using background syncs. Facilitated quick approval, rejections and closeouts of the audit submissions.',\n      'Currently managing a team of 4 and leading the development of a Vessel Chartering application that supports instant vessel matching from a central pool of vessel providers for hiring by cargo providers.',\n      'Tools: JavaScript, TypeScript, React Js, React Query, Next Js, Material UI, Node Js, Docker, Amazon Web Services (AWS), Continuous Integration and Continuous Delivery (CI/CD), Deployment, Schema Design, Pub Sub, Meteor Js, WebSocket, GraphQL, GraphQL Subscriptions, Redis, S3, Testing, Jest, Enzyme',\n    ],\n  },\n  {\n    role: 'Software Engineer Frontend (Remote)',\n    companyName: 'TrustSearch Ltd, Riga, Latvia',\n    companyLogo: `${process.env.PUBLIC_URL}/images/trustsearch-logo.png`,\n    duration: 'July 2019 - July 2020',\n    description:\n      'Develop an application where - Internet users check online reputation of websites, but website owners build trustworthiness online.',\n    descriptionBullets: [\n      'Building architecture for UI.',\n      'Creating and documenting app-wide design system.',\n      'Automating the collection of customer reviews.',\n      'Creation of user survey templates.',\n      'Promote the usage of React hooks for development.',\n      'Development of Server Side Rendered React App using Next JS framework.',\n      'Development of embedded third party JavaScript widgets',\n      'Development of Shopify apps using Node Js, Next Js and GraphQL',\n      'Development of REST APIs using Node Js',\n      'Web Scraping for reviews aggregation',\n      'Writing Unit and Integration tests using Jest and Enzyme',\n      'Translate designs to front-end code, estimate time and costs, and determine developer requirements and specifications',\n      'Writing cross-browser compatible style rules.',\n      'Reviewed code to validate structures, verify browser, device and browser compatibility.',\n      'Tested customer-facing prototypes before deployment, applying best practice diagnostic techniques to verify usability.',\n      'Tools: JavaScript, React Js, Redux, Next JS, Node Js, Material UI, HTML, React Native, Bootstrap, Testing, Jest, Enzyme, Webpack, Styled JSX',\n    ],\n  },\n  {\n    role: 'Freelance Web Developer',\n    companyName: 'Freelance (Part-time)',\n    companyLogo: `${process.env.PUBLIC_URL}/images/e-developers.png`,\n    duration: 'Jun 2017 - July 2019',\n    description:\n      'Being a freelance developer got to work with different clients and experienced working on multiple domains including real-estate, e-commerce, etc.',\n    descriptionBullets: [\n      'Offered complete online services, from creating web wireframes to developing and pushing them to production.',\n      ' Completed full redesigns of existing websites to improve navigation, enhance visuals and strengthen search engine rankings.',\n      'Created eye catching and functional digital design concepts across various platforms to strengthen client brand and identity.',\n      'Produced UI / UX Designs in Figma.',\n      'Tools: HTML, CSS, JavaScript, jQuery, Core PHP, Material Design, Bootstrap',\n    ],\n  },\n  {\n    role: 'Part-time Online Web Dev Instructor',\n    companyName: 'TeacherOn',\n    companyLogo: `${process.env.PUBLIC_URL}/images/teacheron.png`,\n    duration: 'Oct 2017 - July 2019',\n    description:\n      'Taught people how to code in an efficient way. Helped non-IT background people in learning computer programming and web development. Overall it was a very great experience teaching people belonging to different parts of the world and of different age groups',\n    descriptionBullets: false,\n  },\n  {\n    role: 'Guest Instructor (One day Workshop)',\n    companyName: 'Coding Stallions',\n    companyLogo: `${process.env.PUBLIC_URL}/images/e-developers.png`,\n    duration: '27, July 2018',\n    description:\n      'A no-fee one day workshop on web development open to the public and sponsored by Coding Stallions.',\n    descriptionBullets: false,\n  },\n];\n\n// education information section\nconst educationInfo: EducationInfo = [\n  {\n    collegeName: `CATHEDRAL SR. SEC. SCHOOL`,\n    collegeLogo: `${process.env.PUBLIC_URL}/images/cathedral-logo.png`,\n    duration: '1999 - 2013',\n    description: 'INTERMEDIATE',\n    descriptionBullets: false,\n  },\n  {\n    collegeName: 'MCRP UNIVERSITY, BHOPAL',\n    collegeLogo: `${process.env.PUBLIC_URL}/images/mcrp-university.png`,\n    duration: '2014 - 2017',\n    description: 'BACHELOR OF COMPUTER APPLICATIONS (BCA)',\n    descriptionBullets: false,\n  },\n  {\n    collegeName: 'INTEGRAL UNIVERSITY DDE, LUCKNOW',\n    collegeLogo: `${process.env.PUBLIC_URL}/images/integral-uni.png`,\n\n    duration: '2017 - 2019',\n    description: 'MASTER OF COMPUTER APPLICATIONS (MCA)',\n    descriptionBullets: false,\n  },\n];\n\nexport { bioData, skillTags, socialMediaLinks, workExperiences, educationInfo };\n","import { RepositoryTopicsNode } from '../context/GithubProfileContext';\n\n/**\n * Extract topic names from an array of RepositoryTopicsNode[] and\n * attach id and other additional properties to them.\n * @param repositoryTopicsNodes - an array of type RepositoryTopicsNode.\n *\n * @returns topicsWithColors - an array of type { name: string; id: number }.[]\n */\nexport const getRepoTopicsArr = (\n  repositoryTopicsNodes: Partial<RepositoryTopicsNode>[]\n) => {\n  const topicsWithColors: { name: string; id: number }[] = [];\n  repositoryTopicsNodes.forEach((topic, index) => {\n    const topicName = topic?.topic?.name ?? '';\n    if (topicName) {\n      topicsWithColors.push({ name: topicName, id: index });\n    }\n  });\n  return topicsWithColors;\n};\n\n/**\n * A utility method to open a URL in a new tab.\n * @param url - The URL to open in a new tab.\n */\nexport const openInNewTab = (url: string) => {\n  window.open(url, '_blank');\n};\n","import React, { useContext } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport Grid from '@material-ui/core/Grid';\n\nimport ToolTipIconButton from '../shared/ToolTipIconButton/ToolTipIconButton';\nimport { ThemeContext } from '../../context/ThemeContext';\nimport { socialMediaLinks } from '../../assets/portfolio-info';\nimport { openInNewTab } from '../../utils/helpers';\n\nimport './NavBar.css';\n\n/**\n * The horizontal top navbar component to display logo and menu links/buttons\n */\nconst NavBar: React.FC = () => {\n  // theme mode context data, to identify and switch between themes\n  const { themeMode, toggleThemeMode } = useContext(ThemeContext);\n\n  /**\n   * Handler for theme toggle button click event\n   * @param e : Event\n   */\n  const onThemeToggle = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    e.preventDefault();\n    toggleThemeMode();\n  };\n\n  const { mailToLink, telephoneLink } = socialMediaLinks;\n\n  return (\n    <nav className=\"navbar__container\">\n      <AppBar position=\"static\">\n        <Toolbar id=\"back-to-top-anchor\">\n          <Grid container spacing={3}>\n            <Grid\n              item\n              xs={12}\n              sm={8}\n              classes={{ root: 'navbar__container-title-grid' }}\n            >\n              <Typography\n                variant=\"h4\"\n                classes={{ root: 'navbar__container-title' }}\n              >\n                &lt; Mohd Faisal / &gt;\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sm={4}\n              classes={{ root: 'navbar__container-icons-grid' }}\n            >\n              {telephoneLink && (\n                <div className=\"navbar__container-icon-grid-item\">\n                  <ToolTipIconButton\n                    tooltipTitle=\"Call me\"\n                    onClick={() => openInNewTab(telephoneLink)}\n                  >\n                    <PhoneIcon />\n                  </ToolTipIconButton>\n                </div>\n              )}\n              {mailToLink && (\n                <div className=\"navbar__container-icon-grid-item\">\n                  <ToolTipIconButton\n                    tooltipTitle=\"Email me\"\n                    onClick={() => openInNewTab(mailToLink)}\n                  >\n                    <EmailIcon />\n                  </ToolTipIconButton>\n                </div>\n              )}\n              <div className=\"navbar__container-icon-grid-item\">\n                <ToolTipIconButton\n                  tooltipTitle=\"Toggle Light / Dark Mode\"\n                  onClick={onThemeToggle}\n                >\n                  {themeMode === 'dark' ? (\n                    <Brightness7Icon />\n                  ) : (\n                    <Brightness4Icon />\n                  )}\n                </ToolTipIconButton>\n              </div>\n            </Grid>\n          </Grid>\n        </Toolbar>\n      </AppBar>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nimport NavBar from '../NavBar/NavBar';\n\n/**\n * Header component to encapsulate top nav bar.\n */\nconst Header: React.FC = () => (\n  <header>\n    <NavBar />\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\n\nimport { ISkillTag } from '../../../assets/portfolio-info.types';\n\n/**\n * Props interface for SkillTag component\n * @extends ISkillTag interface for skill tag object\n */\ninterface ISkillTagProps extends ISkillTag {\n  size: 'small' | 'medium' | undefined;\n}\n\n/**\n * Link a style sheet to the SkillTag component using the hook pattern.\n */\nconst useStyles = makeStyles({\n  root: (props: React.PropsWithChildren<Partial<ISkillTagProps>>) => ({\n    color: props?.fontColor ?? 'primary',\n    backgroundColor: props.backgroundColor ?? 'secondary',\n    margin: '0 0.2rem 0.2rem ',\n    fontSize: '0.75rem',\n  }),\n});\n\n/**\n * Tag component to display a skill badge.\n * @props size - the size of the skill tag.\n * @props name - the label to display on the tag.\n * @props fontColor - the font color of the tag label.\n * @props backgroundColor - the background color of the tag.\n */\nconst SkillTag: React.FC<Partial<ISkillTagProps>> = (props) => {\n  const classes = useStyles(props);\n  const { size = 'small', name } = props;\n  return <Chip size={size} label={name} className={classes.root} />;\n};\n\nexport default SkillTag;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n\n/**\n * Interface for ImageAvatar component props\n */\ninterface IImageAvatarProps {\n  alt: string;\n  src: string;\n}\n\n/**\n * Link a style sheet to the Home component using the hook pattern.\n */\nconst useStyles = makeStyles(() => ({\n  large: {\n    width: '6rem',\n    height: '6rem',\n  },\n}));\n\n/**\n * An image avatar component.\n * @props src - the source URL of the image.\n * @props alt - the alternate text to be displayed.\n */\nconst ImageAvatar: React.FC<Partial<IImageAvatarProps>> = (props) => {\n  const classes = useStyles();\n  const { alt = '', src = '' } = props;\n  return <Avatar alt={alt} src={src} className={classes.large} />;\n};\n\nexport default ImageAvatar;\n","import React from 'react';\n\n// type for repositories commits ref node object\nexport type RefNode = {\n  name: 'string';\n  target: {\n    history: {\n      totalCount: number;\n    };\n    messageHeadline: string;\n    pushedDate: string;\n  };\n};\n\n// type for repository topics node.\nexport type RepositoryTopicsNode = {\n  topic: {\n    name: string;\n  };\n};\n\n// type for pinned item edge object.\nexport type NodeType = {\n  description: string;\n  diskUsage: number;\n  forkCount: number;\n  homepageUrl: string;\n  id: string;\n  name: string;\n  openGraphImageUrl: string;\n  primaryLanguage: {\n    color: string;\n    name: string;\n  };\n  pushedAt: string;\n  refs: {\n    nodes: Partial<RefNode>[];\n  };\n  repositoryTopics: {\n    nodes: Partial<RepositoryTopicsNode>[];\n  };\n  stargazers: {\n    totalCount: number;\n  };\n  url: string;\n  useCustomOpenGraphImage: boolean;\n};\n\n// type for an array of pinned item edges.\nexport type NodeArr = {\n  node: Partial<NodeType>[];\n};\n\n// type for github user object\nexport type GithubUser = {\n  avatarUrl: string;\n  bio: string;\n  company: string;\n  isHireable: string;\n  location: string;\n  name: string;\n  status: {\n    emojiHTML: string;\n    message: string;\n  };\n  url: string;\n  pinnedItems: {\n    totalCount: number;\n    edges: NodeArr[];\n  };\n  repositories: {\n    nodes: Partial<NodeType>[];\n  };\n};\n\nexport interface IGithubProfileContext {\n  isLoading: boolean;\n  error: string;\n  user: Partial<GithubUser>;\n}\n\n// default value for user object\nconst providerUserDefaultValue: Partial<GithubUser> = {};\n\n// default value for github profile context provider\nconst providerDefaultValue: Partial<IGithubProfileContext> = {\n  isLoading: false,\n  error: '',\n  user: providerUserDefaultValue,\n};\n\n/**\n * Context to provide github user data to the components\n * enclosed within it's provider and avoid props drilling.\n */\nconst GithubProfileContext: React.Context<Partial<IGithubProfileContext>> =\n  React.createContext(providerDefaultValue);\n\nexport default GithubProfileContext;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\ninterface IErrorMessage {\n  children: React.ReactNode;\n  oneLiner: string;\n}\n\n/**\n * A presentational component to display error messages\n * @props children - React node\n * @props oneLiner - a single line error msg to be displayed\n */\nconst ErrorMessage: React.FC<Partial<IErrorMessage>> = (props) => {\n  const { children, oneLiner = '' } = props;\n  return (\n    <Grid container>\n      {oneLiner && (\n        <Typography variant=\"body1\" color=\"error\">\n          {oneLiner}\n        </Typography>\n      )}\n      {children}\n    </Grid>\n  );\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport './LoadingProgress.css';\n\ninterface ILoadingProps {\n  isLoading: boolean;\n  source: string;\n}\n/**\n * A presentational component to display progress spinner and message\n * @props isLoading - to indicate is isLoading (true / false)\n * @props source - data isLoading source name\n */\nconst LoadingProgress: React.FC<ILoadingProps> = ({ isLoading, source }) => (\n  <>\n    {isLoading ? (\n      <Grid classes={{ root: 'loading__container' }}>\n        <CircularProgress />\n        <Typography\n          variant=\"body2\"\n          classes={{ root: 'loading__container-source' }}\n        >\n          Loading data from {source}...\n        </Typography>\n      </Grid>\n    ) : null}\n  </>\n);\n\nexport default LoadingProgress;\n","const errorMsgs = {\n  PINNED_REPOS_ERROR_MSG:\n    'Something went wrong while fetching your github pinned repositories !!',\n  RECENT_REPOS_ERROR_MSG:\n    'Something went wrong while fetching your github recent active repositories !!',\n  PERSONAL_INFO_CARD_ERROR_MSG:\n    'Something went wrong while fetching your github profile - check application console !!',\n};\n\nexport default errorMsgs;\n","import React, { useContext } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport emoji from 'react-easy-emoji';\n\nimport GithubProfileContext from '../../context/GithubProfileContext';\nimport ErrorMessage from '../shared/ErrorMessage/ErrorMessage';\nimport LoadingProgress from '../shared/LoadingProgress/LoadingProgress';\nimport errorMsgs from '../../utils/constants/error-messages';\n\nimport './GithubVCard.css';\n\n/**\n * A card to display a list of github v-card data.\n */\nconst GithubVCard: React.FC = () => {\n  const { isLoading, error, user } = useContext(GithubProfileContext);\n  const status = user?.status;\n  const country = user?.location ?? '';\n  const company = user?.company ?? '';\n  const { emojiHTML = '', message = '' } = status ?? {};\n  const emojiHTMLStr: string = emojiHTML as string;\n\n  return (\n    <>\n      <List\n        component=\"ul\"\n        aria-label=\"main mailbox folders\"\n        classes={{ root: 'github__vcard-list' }}\n      >\n        {message && (\n          <ListItem>\n            <ListItemIcon>\n              <div\n                className=\"github__vcard-g-emoji\"\n                dangerouslySetInnerHTML={{ __html: emojiHTMLStr }}\n              />\n            </ListItemIcon>\n            <ListItemText primary={message} />\n          </ListItem>\n        )}\n        {country && (\n          <ListItem>\n            <ListItemIcon>{emoji('🏠')}</ListItemIcon>\n            <ListItemText primary={country} />\n          </ListItem>\n        )}\n        {company && (\n          <ListItem>\n            <ListItemIcon>{emoji(' 🏗️')}</ListItemIcon>\n            <ListItemText primary={company} />\n          </ListItem>\n        )}\n      </List>\n      {!isLoading && error && (\n        <ErrorMessage oneLiner={errorMsgs.PERSONAL_INFO_CARD_ERROR_MSG} />\n      )}\n      <LoadingProgress isLoading={Boolean(isLoading)} source=\"GitHub\" />\n    </>\n  );\n};\n\nexport default GithubVCard;\n","import React, { useContext } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InsertInvitationIcon from '@material-ui/icons/InsertInvitation';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nimport SkillTag from '../shared/SkillTag/SkillTag';\nimport ImageAvatar from '../shared/ImageAvatar/ImageAvatar';\nimport GithubVCard from '../GithubVCard/GithubVCard';\n\nimport { skillTags, bioData } from '../../assets/portfolio-info';\nimport GithubProfileContext from '../../context/GithubProfileContext';\nimport { openInNewTab } from '../../utils/helpers';\n\nimport './PersonalInfoCard.css';\n\n/**\n * Card to display profile Information\n */\nconst PersonalInfoCard = () => {\n  const { user } = useContext(GithubProfileContext);\n  const { meetingSchedulerLink, resumeDownloadLink } = bioData;\n  const name = user?.name ?? '';\n  const avatarUrl = user?.avatarUrl ?? '';\n\n  return (\n    <Card classes={{ root: 'person-info__card' }}>\n      <CardContent>\n        <Grid>\n          <Grid\n            item\n            xs={12}\n            classes={{ root: 'personal-info__card-header-grid' }}\n          >\n            {skillTags &&\n              skillTags.map((skillTag) => (\n                <SkillTag key={skillTag?.id} {...skillTag} />\n              ))}\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            classes={{ root: 'personal-info__card-avatar-grid' }}\n          >\n            <ImageAvatar src={avatarUrl} alt=\"github-profile-avatar\" />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" align=\"center\">\n              {name}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            classes={{ root: 'personal-info__card-github-grid' }}\n          >\n            <GithubVCard />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions classes={{ root: 'personal-info__card-actions' }}>\n        {meetingSchedulerLink && (\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={<InsertInvitationIcon />}\n            onClick={() => openInNewTab(meetingSchedulerLink)}\n          >\n            Book a call\n          </Button>\n        )}\n        {resumeDownloadLink && (\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={<GetAppIcon />}\n            onClick={() => openInNewTab(resumeDownloadLink)}\n          >\n            Resume\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default PersonalInfoCard;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport './ShowMoreAccordion.css';\n\ninterface IShowMoreAccordion {\n  summary: string;\n  children: React.ReactNode;\n}\n\n/**\n * An expandable and collapsible accordion to show more content.\n * @prop summary - The summary to display on the accordion.\n * @prop children - React node to be displayed under accordion details\n */\nconst ShowMoreAccordion: React.FC<Partial<IShowMoreAccordion>> = (props) => {\n  const { summary, children } = props;\n  return (\n    <Accordion classes={{ root: 'show__more-accordion' }}>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls={`${summary} content`}\n        id={`${summary} header`}\n      >\n        <Typography component=\"div\">{summary}</Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Typography>{children}</Typography>\n      </AccordionDetails>\n    </Accordion>\n  );\n};\n\nexport default ShowMoreAccordion;\n","import React, { useContext } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport emoji from 'react-easy-emoji';\nimport { v1 as uuidv1 } from 'uuid';\nimport Button from '@material-ui/core/Button';\n\nimport ShowMoreAccordion from '../shared/ShowMoreAccordion/ShowMoreAccordion';\nimport GithubProfileContext from '../../context/GithubProfileContext';\n\nimport { bioData, socialMediaLinks } from '../../assets/portfolio-info';\nimport { openInNewTab } from '../../utils/helpers';\n\nimport './About.css';\n\n/**\n *  A presentational component to display profile information (bio data)\n */\nconst About: React.FC = () => {\n  const { aboutMe, recentChallengeSolved, bioTagLine } = bioData;\n  const { linkedIn, skype } = socialMediaLinks;\n  const { user } = useContext(GithubProfileContext);\n  const bio = user?.bio ?? '';\n  return (\n    <Paper className=\"about__container\">\n      <Typography variant=\"h4\" classes={{ root: 'about__container-heading' }}>\n        About Me\n      </Typography>\n      {bio && (\n        <Typography\n          variant=\"body1\"\n          key={uuidv1()}\n          classes={{ root: 'about__container-about-para' }}\n        >\n          {bio}\n        </Typography>\n      )}\n      {aboutMe &&\n        aboutMe.map((aboutMePara) => (\n          <Typography\n            variant=\"body1\"\n            key={uuidv1()}\n            classes={{ root: 'about__container-about-para' }}\n          >\n            {aboutMePara}\n          </Typography>\n        ))}\n      <Grid container>\n        {recentChallengeSolved && (\n          <ShowMoreAccordion summary=\"A Recent Challenge Solved\">\n            {recentChallengeSolved}\n          </ShowMoreAccordion>\n        )}\n      </Grid>\n      <Grid container>\n        <Typography variant=\"h6\" gutterBottom>\n          {bioTagLine}\n        </Typography>\n        {linkedIn && (\n          <Typography variant=\"body1\">\n            {emoji('📥')} DMs are open on{' '}\n            <Button color=\"primary\" onClick={() => openInNewTab(linkedIn)}>\n              LinkedIn\n            </Button>{' '}\n            {skype && (\n              <span>\n                and{' '}\n                <Button\n                  color=\"primary\"\n                  onClick={() => openInNewTab(`skype:${skype}?chat`)}\n                >\n                  Skype\n                </Button>\n              </span>\n            )}\n          </Typography>\n        )}\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default About;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport PersonalInfoCard from '../PersonalInfoCard/PersonalInfoCard';\nimport About from '../About/About';\n\nimport './Profile.css';\n\n/**\n * A container component to display personal info and bio data.\n */\nconst Profile: React.FC = () => (\n  <Grid container classes={{ root: 'profile__main-container-grid' }}>\n    <Grid item md={1} />\n    <Grid item md={3} classes={{ root: 'profile__personal-card-grid' }}>\n      <PersonalInfoCard />\n    </Grid>\n    <Grid item md={7} classes={{ root: 'profile__about-card-grid' }}>\n      <About />\n    </Grid>\n  </Grid>\n);\n\nexport default Profile;\n","import React from 'react';\nimport emoji from 'react-easy-emoji';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport './EmojiList.css';\n\ninterface IEmojiList {\n  dataArr: string[];\n}\n\n/**\n * A presentational component to display a bulleted list.\n * @prop dataArr - An array to be displayed as bulleted list.\n */\nconst EmojiList: React.FC<IEmojiList> = (props) => {\n  const { dataArr } = props;\n  return (\n    <span className=\"emoji__list\">\n      {dataArr &&\n        dataArr.map((dataItem) => (\n          <span key={uuidv1()} className=\"emoji__list__item\">\n            <span className=\"emoji__list__item-icon\">{emoji('👉')}</span>\n            <span className=\"emoji__list__item-text\">{dataItem}</span>\n          </span>\n        ))}\n    </span>\n  );\n};\n\nexport default EmojiList;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport ShowMoreAccordion from '../ShowMoreAccordion/ShowMoreAccordion';\n\nimport './InfoCard.css';\nimport EmojiList from '../EmojiList/EmojiList';\n\ninterface IInfoCard {\n  title: string;\n  subtitle: string;\n  metaData: string;\n  description: string;\n  descriptionBullets: string[] | false;\n  imageURL: string | false;\n}\n\n/**\n * A presentational component to display information in a card in a specific format.\n * @prop title - the title for the info card.\n * @prop subtitle - the subtitle for the info card.\n * @prop metaData - the meta data (for ex- duration, date) for the info card\n * @prop description - the description for the info card.\n * @prop descriptionBullets - the description bullet points for the info card.\n */\nconst InfoCard: React.FC<Partial<IInfoCard>> = (props) => {\n  const {\n    title,\n    subtitle,\n    metaData,\n    description,\n    descriptionBullets,\n    imageURL,\n  } = props;\n  return (\n    <Card classes={{ root: 'info__card' }}>\n      <div className=\"info__card__details\">\n        <CardContent classes={{ root: 'info__card__content' }}>\n          {title && (\n            <Typography\n              variant=\"body1\"\n              classes={{ body1: 'info__card__title' }}\n            >\n              {title}\n            </Typography>\n          )}\n          {subtitle && (\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {subtitle}\n            </Typography>\n          )}\n          {metaData && (\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {metaData}\n            </Typography>\n          )}\n          {description && (\n            <Typography variant=\"body2\">{description}</Typography>\n          )}\n        </CardContent>\n        {descriptionBullets && (\n          <div className=\"info__card-description-bullets\">\n            <ShowMoreAccordion summary=\"More\">\n              <EmojiList dataArr={descriptionBullets} />\n            </ShowMoreAccordion>\n          </div>\n        )}\n      </div>\n      {imageURL && (\n        <CardMedia\n          image={imageURL}\n          title=\"Live from space album cover\"\n          classes={{ root: 'info__card__media' }}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default InfoCard;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport emoji from 'react-easy-emoji';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport InfoCard from '../shared/InfoCard/InfoCard';\n\nimport { educationInfo as educationInfoData } from '../../assets/portfolio-info';\nimport './EducationInfo.css';\n\n/**\n * A presentational component to display educational information.\n */\nconst EducationInfo: React.FC = () => (\n  <Grid classes={{ root: 'education__info' }}>\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"education__info-content\"\n        id=\"education__info-header\"\n      >\n        <Typography variant=\"h6\" gutterBottom>\n          <span className=\"education__info-header-icon\">{emoji('🎓')}</span>{' '}\n          <span> Education</span>\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container>\n          {educationInfoData &&\n            educationInfoData.map((educationItem) => {\n              const {\n                collegeName,\n                collegeLogo,\n                duration,\n                description,\n                descriptionBullets,\n              } = educationItem;\n              return (\n                <Grid item xs={12} key={uuidv1()}>\n                  <InfoCard\n                    title={collegeName}\n                    metaData={duration}\n                    description={description}\n                    descriptionBullets={descriptionBullets}\n                    imageURL={collegeLogo}\n                  />\n                </Grid>\n              );\n            })}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  </Grid>\n);\n\nexport default EducationInfo;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport emoji from 'react-easy-emoji';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport InfoCard from '../shared/InfoCard/InfoCard';\n\nimport { workExperiences as workExperiencesData } from '../../assets/portfolio-info';\nimport './WorkExperience.css';\n\n/**\n * A presentational component to display work experience information.\n */\nconst WorkExperience: React.FC = () => (\n  <Grid classes={{ root: 'work__experience' }}>\n    <Accordion>\n      <AccordionSummary\n        expandIcon={<ExpandMoreIcon />}\n        aria-controls=\"work__experience-content\"\n        id=\"work__experience-header\"\n      >\n        <Typography variant=\"h6\" gutterBottom>\n          <span className=\"work__experience-header-icon\">{emoji(' 🏗️')}</span>\n          <span>Work Experience</span>\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <Grid container>\n          {workExperiencesData &&\n            workExperiencesData.map((workExperienceDataItem) => {\n              const {\n                role,\n                companyName,\n                companyLogo,\n                duration,\n                description,\n                descriptionBullets,\n              } = workExperienceDataItem;\n              return (\n                <Grid item xs={12} key={uuidv1()}>\n                  <InfoCard\n                    title={role}\n                    subtitle={companyName}\n                    metaData={duration}\n                    description={description}\n                    descriptionBullets={descriptionBullets}\n                    imageURL={companyLogo}\n                  />\n                </Grid>\n              );\n            })}\n        </Grid>\n      </AccordionDetails>\n    </Accordion>\n  </Grid>\n);\n\nexport default WorkExperience;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nimport EducationInfo from '../EducationInfo/EducationInfo';\nimport WorkExperience from '../WorkExperience/WorkExperience';\n\nimport './EducationAndWork.css';\n\n/**\n * A container component to display EducationInfo and Work Experience\n */\nconst EducationAndWork: React.FC = () => (\n  <Grid container classes={{ root: 'education__and__work' }}>\n    <Grid item md={1} />\n    <Grid item md={10} classes={{ root: 'education__and__work-full-w' }}>\n      <Grid\n        container\n        spacing={3}\n        classes={{ root: 'education__and__work-container-grid' }}\n      >\n        <Grid item md={6}>\n          <EducationInfo />\n        </Grid>\n        <Grid item md={6}>\n          <WorkExperience />\n        </Grid>\n      </Grid>\n    </Grid>\n  </Grid>\n);\n\nexport default EducationAndWork;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport emoji from 'react-easy-emoji';\nimport moment from 'moment';\n\nimport { RefNode } from '../../../context/GithubProfileContext';\n\nimport './RepoCardSummary.css';\n\ninterface IRepoCardSummary {\n  repoSummary: {\n    primaryLanguageColor: string;\n    primaryLanguageName: string;\n    forkCount: number;\n    stars: number;\n    diskUsage: number;\n    pushedAt: string;\n    latestCommitObj: Partial<RefNode>;\n  };\n}\n\n/**\n * A presentational component to display repository summary.\n * @props repoSummary - object holding the info about a repository such as name, description, etc.\n * For keys inside repSummary refer - IRepoCardSummary\n */\nconst RepoCardSummary: React.FC<Partial<IRepoCardSummary>> = (props) => {\n  const { repoSummary } = props;\n  const {\n    primaryLanguageColor,\n    primaryLanguageName,\n    forkCount,\n    stars,\n    diskUsage,\n    latestCommitObj,\n  } = repoSummary ?? {};\n\n  const { name = '', target } = latestCommitObj ?? {};\n  const totalCount = target?.history?.totalCount ?? 0;\n  const messageHeadline = target?.messageHeadline ?? '';\n  const pushedDate = target?.pushedDate ?? '';\n\n  return (\n    <Grid container classes={{ root: 'repo__card-summary' }}>\n      <Grid item xs={12} classes={{ root: 'repo__card-summary-top' }}>\n        <Typography\n          variant=\"caption\"\n          classes={{ root: 'repo__card__summary-primary-lang' }}\n        >\n          <span\n            className=\"repo__card__summary-primary-lang-color\"\n            style={{\n              background: primaryLanguageColor,\n            }}\n          />\n          <span>{primaryLanguageName}</span>\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          classes={{ root: 'repo__card__summary-fork' }}\n        >\n          {emoji('🍴')}\n          <span> {forkCount}</span>\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          classes={{ root: 'repo__card__summary-star' }}\n        >\n          {emoji(' ⭐')}\n          <span>{stars}</span>\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          classes={{ root: 'repo__card__summary-usage' }}\n        >\n          {emoji(' 💾')}\n          <span>{diskUsage} KB</span>\n        </Typography>\n      </Grid>\n      <Grid item xs={12} classes={{ root: 'repo__card-summary-bottom' }}>\n        <Typography\n          variant=\"caption\"\n          classes={{ root: 'repo__card-summary-bottom-item' }}\n        >\n          <span>{emoji('⚡')}</span>\n          <span>{messageHeadline}</span>\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          classes={{ root: 'repo__card-summary-bottom-item' }}\n        >\n          <span>{emoji('⚡')}</span>\n          <span>\n            {moment(new Date(pushedDate)).fromNow()} on <span>{name}</span>\n          </span>\n        </Typography>\n        <Typography\n          variant=\"caption\"\n          classes={{ root: 'repo__card-summary-bottom-item' }}\n        >\n          <span>{emoji('⚡')}</span>\n          <span>\n            {totalCount} commits on <span>branch {name}</span>\n          </span>\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RepoCardSummary;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkIcon from '@material-ui/icons/Link';\nimport emoji from 'react-easy-emoji';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport SkillTag from '../SkillTag/SkillTag';\nimport RepoCardSummary from './RepoCardSummary';\n\nimport { NodeType as PinnedItemsNodeType } from '../../../context/GithubProfileContext';\nimport { getRepoTopicsArr, openInNewTab } from '../../../utils/helpers';\n\nimport './RepoCard.css';\n\ninterface IRepoCard {\n  repoDetails: Partial<PinnedItemsNodeType>;\n}\n\n/**\n * Card to display github repo info\n * @prop repoDetails - an object confirming to interface NodeType\n */\nconst RepoCard: React.FC<Partial<IRepoCard>> = (props) => {\n  const { repoDetails } = props;\n  const name = repoDetails?.name ?? '';\n  const description = repoDetails?.description ?? '';\n  const repositoryTopicsNodes = repoDetails?.repositoryTopics?.nodes ?? [];\n  const diskUsage = repoDetails?.diskUsage ?? 0;\n  const forkCount = repoDetails?.forkCount ?? 0;\n  const homepageUrl = repoDetails?.homepageUrl ?? '';\n  const primaryLanguage = repoDetails?.primaryLanguage;\n  const primaryLanguageColor = primaryLanguage?.color ?? '';\n  const primaryLanguageName = primaryLanguage?.name ?? '';\n  const pushedAt = repoDetails?.pushedAt ?? '';\n  const repoDetailRef = repoDetails?.refs;\n  const repoDetailsRefNodes = repoDetailRef?.nodes ?? [];\n  const latestCommitObj = repoDetailsRefNodes[0];\n  const stargazers = repoDetails?.stargazers;\n  const url = repoDetails?.url ?? '';\n\n  return (\n    <Card classes={{ root: 'repo-card' }}>\n      <CardContent classes={{ root: 'repo-card-content' }}>\n        <Grid classes={{ root: 'repo-card-content-grid' }}>\n          <Grid item xs={12} classes={{ root: 'repo-card-header-grid' }}>\n            {getRepoTopicsArr(repositoryTopicsNodes).map((topic) => {\n              const topicName = topic?.name ?? '';\n              const id = topic?.id;\n              return (\n                <span key={uuidv1()}>\n                  <SkillTag name={topicName} id={id} />\n                </span>\n              );\n            })}\n          </Grid>\n        </Grid>\n        <Grid item xs={12} classes={{ root: 'repo-card-details-grid' }}>\n          <Grid item xs={12} classes={{ root: 'repo-card-details-main' }}>\n            {name && (\n              <Typography variant=\"h6\" gutterBottom>\n                {emoji('🗄️')} {name}\n              </Typography>\n            )}\n            {description && (\n              <Typography variant=\"body2\" gutterBottom>\n                {description}\n              </Typography>\n            )}\n          </Grid>\n          <Grid item xs={12} classes={{ root: 'repo-card-meta-grid' }}>\n            <RepoCardSummary\n              repoSummary={{\n                primaryLanguageColor,\n                primaryLanguageName,\n                forkCount,\n                stars: stargazers?.totalCount ?? 0,\n                diskUsage,\n                pushedAt,\n                latestCommitObj,\n              }}\n            />\n          </Grid>\n        </Grid>\n      </CardContent>\n      <CardActions classes={{ root: 'repo-card-actions' }}>\n        <Button\n          size=\"small\"\n          variant=\"outlined\"\n          onClick={() => openInNewTab(url)}\n          startIcon={<GitHubIcon />}\n        >\n          Github\n        </Button>\n        {homepageUrl && (\n          <Button\n            size=\"small\"\n            variant=\"outlined\"\n            startIcon={<LinkIcon />}\n            onClick={() => openInNewTab(homepageUrl)}\n          >\n            Live Demo\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default RepoCard;\n","import React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport emoji from 'react-easy-emoji';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport RepoCard from '../shared/RepoCard/RepoCard';\nimport ErrorMessage from '../shared/ErrorMessage/ErrorMessage';\nimport LoadingProgress from '../shared/LoadingProgress/LoadingProgress';\nimport GithubProfileContext, {\n  NodeType as PinnedItemsNodeType,\n} from '../../context/GithubProfileContext';\nimport errorMsgs from '../../utils/constants/error-messages';\n\nimport './PinnedRepos.css';\n\n/**\n * A container component to display pinned / featured repositories on github\n */\nconst PinnedRepos: React.FC = () => {\n  const { isLoading, error, user } = useContext(GithubProfileContext);\n  const pinnedItems = user?.pinnedItems;\n  const { edges = [] } = pinnedItems ?? {};\n  // state variable and method for controlled accordion\n  const [expanded, setExpanded] = React.useState<string | false>('panel1');\n\n  // handler for accordion expand state change\n  const handleChange =\n    (panel: string) => (event: React.ChangeEvent<{}>, newExpanded: boolean) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n\n  return (\n    <Grid container classes={{ root: 'pinned__repos' }}>\n      <Grid item md={1} />\n      <Grid item md={10} classes={{ root: 'pinned__repos-full-w' }}>\n        <Accordion\n          expanded={expanded === 'panel1'}\n          onChange={handleChange('panel1')}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography\n              variant=\"h6\"\n              classes={{ root: 'pinned__repos-accordion-title' }}\n            >\n              {emoji('📌')} Pinned Repositories\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Grid container classes={{ root: 'pinned__repos-grid-container' }}>\n              <Grid container spacing={3}>\n                {edges &&\n                  edges.map((edge) => (\n                    <Grid\n                      item\n                      lg={4}\n                      md={6}\n                      xs={12}\n                      key={uuidv1()}\n                      classes={{ root: 'pinned__repos-card-grid' }}\n                    >\n                      <RepoCard\n                        repoDetails={{\n                          ...(edge?.node as Partial<PinnedItemsNodeType>),\n                        }}\n                      />\n                    </Grid>\n                  ))}\n                {!isLoading && error && (\n                  <ErrorMessage oneLiner={errorMsgs.PINNED_REPOS_ERROR_MSG} />\n                )}\n                <LoadingProgress isLoading={!!isLoading} source=\"GitHub\" />\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n    </Grid>\n  );\n};\nexport default PinnedRepos;\n","import React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport emoji from 'react-easy-emoji';\nimport { v1 as uuidv1 } from 'uuid';\n\nimport RepoCard from '../shared/RepoCard/RepoCard';\nimport ErrorMessage from '../shared/ErrorMessage/ErrorMessage';\nimport LoadingProgress from '../shared/LoadingProgress/LoadingProgress';\nimport GithubProfileContext, {\n  RefNode as RecentRepositoriesNodeType,\n} from '../../context/GithubProfileContext';\nimport errorMsgs from '../../utils/constants/error-messages';\n\nimport './RecentActivities.css';\n\n/**\n * A container component to display recently accessed repositories on github by the user.\n */\nconst RecentActivities: React.FC = () => {\n  const { isLoading, error, user } = useContext(GithubProfileContext);\n  const repositories = user?.repositories;\n  const { nodes = [] } = repositories ?? {};\n  // state variable and method for controlled accordion\n  const [expanded, setExpanded] = React.useState<string | false>(false);\n\n  // handler for accordion expand state change\n  const handleChange =\n    (panel: string) => (event: React.ChangeEvent<{}>, newExpanded: boolean) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n\n  return (\n    <Grid container classes={{ root: 'recent__activities' }}>\n      <Grid item md={1} />\n      <Grid item md={10} classes={{ root: 'recent__activities-full-w' }}>\n        <Accordion\n          expanded={expanded === 'panel1'}\n          onChange={handleChange('panel1')}\n        >\n          <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n          >\n            <Typography\n              variant=\"h6\"\n              classes={{ root: 'recent__activities-accordion-title' }}\n            >\n              {emoji('🕰️')} Recently Active Repositories\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <Grid\n              container\n              classes={{ root: 'recent__activities-grid-container' }}\n            >\n              <Grid container spacing={3}>\n                {nodes &&\n                  nodes.map((repository) => (\n                    <Grid\n                      item\n                      lg={4}\n                      md={6}\n                      xs={12}\n                      key={uuidv1()}\n                      classes={{ root: 'recent__activities-card-grid' }}\n                    >\n                      <RepoCard\n                        repoDetails={{\n                          ...(repository as RecentRepositoriesNodeType),\n                        }}\n                      />\n                    </Grid>\n                  ))}\n                {!isLoading && error && (\n                  <ErrorMessage oneLiner={errorMsgs.RECENT_REPOS_ERROR_MSG} />\n                )}\n                <LoadingProgress isLoading={!!isLoading} source=\"GitHub\" />\n              </Grid>\n            </Grid>\n          </AccordionDetails>\n        </Accordion>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default RecentActivities;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\n\nimport { socialMediaLinks } from '../../../assets/portfolio-info';\nimport { openInNewTab } from '../../../utils/helpers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n}));\n\nconst IconButtons: React.FC = () => {\n  const classes = useStyles();\n  const {\n    github,\n    mailToLink,\n    linkedIn,\n    twitter,\n    facebook,\n    instagram,\n  } = socialMediaLinks;\n\n  return (\n    <div className={classes.root}>\n      {github && (\n        <IconButton\n          aria-label=\"github-link\"\n          onClick={() => openInNewTab(github)}\n        >\n          <GitHubIcon />\n        </IconButton>\n      )}\n      {mailToLink && (\n        <IconButton\n          aria-label=\"email-link\"\n          onClick={() => openInNewTab(mailToLink)}\n        >\n          <EmailIcon />\n        </IconButton>\n      )}\n      {linkedIn && (\n        <IconButton\n          aria-label=\"linkedIn-link\"\n          onClick={() => openInNewTab(linkedIn)}\n        >\n          <LinkedInIcon />\n        </IconButton>\n      )}\n      {twitter && (\n        <IconButton\n          aria-label=\"twitter-link\"\n          onClick={() => openInNewTab(twitter)}\n        >\n          <TwitterIcon />\n        </IconButton>\n      )}\n      {facebook && (\n        <IconButton\n          aria-label=\"facebook-link\"\n          onClick={() => openInNewTab(facebook)}\n        >\n          <FacebookIcon />\n        </IconButton>\n      )}\n      {instagram && (\n        <IconButton\n          aria-label=\"instagram-link\"\n          onClick={() => openInNewTab(instagram)}\n        >\n          <InstagramIcon />\n        </IconButton>\n      )}\n    </div>\n  );\n};\n\nexport default IconButtons;\n","import React from 'react';\nimport Zoom from '@material-ui/core/Zoom';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface IScrollTop {\n  children: React.ReactNode;\n  elementId: string;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\n/**\n * A container component to scroll into a view on click of the target element\n */\n\nconst ScrollTop = (props: IScrollTop) => {\n  const { children, elementId } = props;\n  const classes = useStyles();\n  const trigger = useScrollTrigger();\n\n  const handleClick = () => {\n    const anchor = document.querySelector(`#${elementId}`);\n\n    if (anchor) {\n      anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n        {children}\n      </div>\n    </Zoom>\n  );\n};\n\nexport default ScrollTop;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\n\nimport SocialMediaLinksList from '../shared/SocialMediaLinksList/SocialMediaLinksList';\nimport ScrollTop from '../shared/ScrollTop/ScrollTop';\nimport './Footer.css';\n\n/**\n * Presentational component to display footer information\n */\nconst Footer: React.FC = () => (\n  <footer>\n    <Grid container classes={{ root: 'footer__container' }}>\n      <Grid item xs={1} />\n      <Grid item xs={10}>\n        <Typography variant=\"subtitle2\">\n          Digital Dev Resume | By Mohd Faisal\n        </Typography>\n        <Grid container>\n          <Grid item xs={12}>\n            <SocialMediaLinksList />\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n    <ScrollTop elementId=\"back-to-top-anchor\">\n      <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n        <KeyboardArrowUpIcon />\n      </Fab>\n    </ScrollTop>\n  </footer>\n);\n\nexport default Footer;\n","const PALETTE_PRIMARY = {\n  light: '#0a558d',\n  dark: '#000',\n};\n\nconst HOME_CONTAINER = {\n  background: {\n    light: '#f5f5f5',\n    dark: '#000',\n  },\n};\n\nexport { PALETTE_PRIMARY, HOME_CONTAINER };\n","export const THEME_MODES = {\n  dark: 'dark',\n  light: 'light',\n};\n","import React, { useEffect, useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport axios, { AxiosError } from 'axios';\n\nimport Header from '../components/Header/Header';\nimport Profile from '../components/Profile/Profile';\nimport EducationAndWork from '../components/EducationAndWork/EducationAndWork';\nimport PinnedRepos from '../components/PinnedRepos/PinnedRepos';\nimport RecentActivites from '../components/RecentActivites/RecentActivities';\nimport Footer from '../components/Footer/Footer';\nimport GithubProfileContext from '../context/GithubProfileContext';\n\nimport { HOME_CONTAINER } from '../utils/constants/colors-codes';\nimport { THEME_MODES } from '../utils/constants/theme-modes';\n\n/**\n * Link a style sheet to the Home component using the hook pattern.\n */\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    borderRadius: 0,\n    flexDirection: 'column',\n    alignSelf: 'stretch',\n    height: '100%',\n    backgroundColor:\n      theme.palette.type === THEME_MODES.dark\n        ? HOME_CONTAINER.background.dark\n        : HOME_CONTAINER.background.light,\n  },\n}));\n\n/**\n * The main container component that encapsulate all the other components\n * and can be considered as the home page of the App.\n */\nconst Home: React.FC = () => {\n  const classes = useStyles();\n  // state variable and method to hold and set github user profile data.\n  //! Todo replace useState with useReducer implementation for a cleaner approach\n  const [gitHubProfileData, setGithubProfileData] = useState(() => ({\n    isLoading: false,\n    error: '',\n    user: {},\n  }));\n\n  /**\n   * Fetches the github profile data from github-profile.json in /public directory\n   * using axios client and set it inside the component state.\n   *\n   */\n  const getGithubProfileData = async () => {\n    try {\n      setGithubProfileData((prevGithubProfileData) => ({\n        ...prevGithubProfileData,\n        isLoading: true,\n        error: '',\n        user: {},\n      }));\n      const result = await axios.get(\n        `${process.env.PUBLIC_URL}/github-profile.json`\n      );\n      const user = result?.data?.data?.user ?? {};\n      // set the user data inside state\n      setGithubProfileData((prevGithubProfileData) => ({\n        ...prevGithubProfileData,\n        isLoading: false,\n        error: '',\n        user: { ...user },\n      }));\n    } catch (err) {\n      const errors = err as Error | AxiosError;\n      console.log(err);\n      // set error message inside the state\n      setGithubProfileData((prevGithubProfileData) => ({\n        ...prevGithubProfileData,\n        isLoading: false,\n        error: errors?.message ?? '',\n        user: {},\n      }));\n    }\n  };\n\n  /**\n   * effect to call a function to fetch user github profile on mount.\n   */\n  useEffect(() => {\n    getGithubProfileData();\n  }, []);\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <GithubProfileContext.Provider value={{ ...gitHubProfileData }}>\n        <Header />\n        <Profile />\n        <EducationAndWork />\n        <PinnedRepos />\n        <RecentActivites />\n        <Footer />\n      </GithubProfileContext.Provider>\n    </Paper>\n  );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nimport Home from './pages/Home';\nimport { ThemeContext, ThemeModeType } from './context/ThemeContext';\nimport { PALETTE_PRIMARY } from './utils/constants/colors-codes';\nimport { THEME_MODES } from './utils/constants/theme-modes';\n\n/**\n * The root component / container of the application\n */\nconst App: React.FC = () => {\n  // check for existing mode in local storage\n  const existingMode =\n    window.localStorage.getItem('digital-dev-resume-v-mode') ||\n    THEME_MODES.light;\n  // state for light/dark mode toggle\n  const [themeMode, setThemeMode] = useState<ThemeModeType>(\n    existingMode as ThemeModeType\n  );\n\n  /**\n   * Method to trigger theme change\n   */\n  const toggleThemeMode = () => {\n    setThemeMode((prevMode) => {\n      const newMode =\n        prevMode === THEME_MODES.dark\n          ? (THEME_MODES.light as ThemeModeType)\n          : (THEME_MODES.dark as ThemeModeType);\n      // persist mode in local storage\n      window.localStorage.setItem(\n        'digital-dev-resume-v-mode',\n        newMode as string\n      );\n      return newMode;\n    });\n  };\n\n  // Material-ui theme override\n  const theme = createMuiTheme({\n    palette: {\n      type: themeMode,\n      primary: {\n        main:\n          themeMode === THEME_MODES.light\n            ? PALETTE_PRIMARY.light\n            : PALETTE_PRIMARY.dark,\n      },\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ThemeContext.Provider value={{ themeMode, toggleThemeMode }}>\n        <Paper>\n          <Home />\n        </Paper>\n      </ThemeContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}